SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO


/*==============================          
Author : TRILOKI KHANNA   
CREATE DATE : 27-11-2019          
MODIFY DATE : 27-11-2019         
DESCRIPTION : UPDATE TOTAL PROVISION          
--EXEC [pro].[UpdationTotalProvision] @TimeKey =25410            
=========================================*/                
CREATE PROCEDURE [PRO].[UpdationTotalProvision]              
@TimeKey int   
with recompile               
AS              
  BEGIN              
   SET NOCOUNT ON;              
              
 BEGIN TRY    
 
 DECLARE @vEffectivefrom  Int SET @vEffectiveFrom=(SELECT TimeKey FROM [dbo].Automate_Advances WHERE EXT_FLG='Y')          
 Declare @vEffectiveto INT Set @vEffectiveto= (select Timekey-1 from [dbo].Automate_Advances where EXT_FLG='Y')
 DECLARE @DATE AS DATE =(SELECT Date FROM [dbo].Automate_Advances WHERE EXT_FLG='Y')

 UPDATE  PRO.ACCOUNTCAL              
 SET TOTALPROVISION = 0  ,BANKTOTALPROVISION=0,RBITOTALPROVISION=0

 
 UPDATE  PRO.CUSTOMERCAL              
 SET TOTPROVISION = 0  ,BANKTOTPROVISION=0,RBITOTPROVISION=0
              
 UPDATE A                   
 SET  
         TOTALPROVISION       =(ISNULL(A.PROVSECURED,0) + ISNULL(A.PROVUNSECURED,0)  + (ISNULL(A.ADDLPROVISION,0))+ ISNULL(A.PROVCOVERGOVGUR,0)+  ISNULL(A.PROVDFV,0)) 
		 ,BANKTOTALPROVISION  =(ISNULL(A.BANKPROVSECURED,0) + ISNULL(A.BANKPROVUNSECURED,0)  + (ISNULL(A.ADDLPROVISION,0))+ ISNULL(A.PROVCOVERGOVGUR,0)+   ISNULL(A.PROVDFV,0)) 
        ,RBITOTALPROVISION   =(ISNULL(A.RBIPROVSECURED,0) +  ISNULL(A.RBIPROVUNSECURED,0)  +  (ISNULL(A.ADDLPROVISION,0))+ ISNULL(A.PROVCOVERGOVGUR,0)+   ISNULL(A.PROVDFV,0))                                           
 FROM  PRO.ACCOUNTCAL    A             
 
 UPDATE PRO.ACCOUNTCAL SET TOTALPROVISION=0 WHERE ISNULL(TOTALPROVISION,0)<0
 UPDATE PRO.ACCOUNTCAL SET BANKTOTALPROVISION=0 WHERE ISNULL(BANKTOTALPROVISION,0)<0
 UPDATE PRO.ACCOUNTCAL SET RBITOTALPROVISION=0 WHERE ISNULL(RBITOTALPROVISION,0)<0

 
 UPDATE PRO.ACCOUNTCAL SET TOTALPROVISION=NetBalance WHERE ISNULL(TOTALPROVISION,0)>NetBalance AND ISNULL(NetBalance,0)>0
 UPDATE PRO.ACCOUNTCAL SET BANKTOTALPROVISION=NetBalance WHERE ISNULL(BANKTOTALPROVISION,0)>NetBalance AND ISNULL(NetBalance,0)>0
 UPDATE PRO.ACCOUNTCAL SET RBITOTALPROVISION=NetBalance WHERE ISNULL(RBITOTALPROVISION,0)>NetBalance AND ISNULL(NetBalance,0)>0

 UPDATE A SET TOTALPROVISION=RBITOTALPROVISION,PROVSECURED=RBIPROVSECURED,PROVUNSECURED=RBIPROVUNSECURED,ADDLPROVISION=ADDLPROVISION,PROVCOVERGOVGUR=PROVCOVERGOVGUR,PROVDFV=PROVDFV
 FROM PRO.ACCOUNTCAL A  where ISNULL(A.RBITOTALPROVISION,0)>ISNULL(A.BANKTOTALPROVISION,0)

 UPDATE PRO.ACCOUNTCAL SET TOTALPROVISION=NetBalance WHERE ISNULL(TOTALPROVISION,0)>NetBalance AND ISNULL(NetBalance,0)>0


/* ACCELARATED PROVISION WORK */

 UPDATE  A
	SET A.AddlProvision=ISNULL(AddlProvision,0)+(ISNULL(A.NETBALANCE,0)* ISNULL(AP.AccProvPer,0))/100
 FROM PRO.ACCOUNTCAL A  
	INNER JOIN [CurDat].AcceleratedProv AP 
			ON AP.EffectiveFromTimeKey<=@TimeKey AND AP.EffectiveToTimeKey>=@TimeKey
			 AND A.CustomerACID=AP.CustomerACID
			 AND A.SourceAlt_Key=AP.SrcSysAlt_Key


 UPDATE A --USE ADDL PROVISION UPTO NET BALANCE AND TOTAL PROVISION DIFF.
	set A.AddlProvision =CASE WHEN  (NetBalance-TotalProvision)>=AddlProvision
										THEN AddlProvision
									WHEN (NetBalance-TotalProvision)<AddlProvision
										THEN (NetBalance-TotalProvision)
								ELSE 0 END
 FROM PRO.ACCOUNTCAL A   
  WHERE A.FinalAssetClassAlt_Key>1 AND ISNULL(A.NetBalance,0)>=0
	AND ISNULL(AddlProvision,0)>0

 UPDATE A
	SET TOTALPROVISION=TOTALPROVISION+A.AddlProvision
 FROM PRO.ACCOUNTCAL A   
  WHERE ISNULL(AddlProvision,0)>0

 UPDATE PRO.ACCOUNTCAL SET TOTALPROVISION=NetBalance WHERE ISNULL(TOTALPROVISION,0)>NetBalance AND ISNULL(NetBalance,0)>0

/*ACCELERATED PROVISION WORK - COMPARING TOTAL PROVISION WITH ACCELERATED PROVISION COMPUTATION AND ADDITIONAL DIFF VALUE WILL BE PLUS IN TOTAL PROVISION AND ADDITIONAL PROVISION */
	DROP TABLE IF EXISTS #ACT_ACLRTD_PROV
	SELECT A.AccountEntityID, ISNULL(NetBalance,0)*ISNULL(B.AccProvPer,0)/100.00 AcclProvAmt
		INTO #ACT_ACLRTD_PROV
	FROM PRO.ACCOUNTCAL A
		INNER JOIN CURDAT.AcceleratedProv B
				ON B.EffectiveFromTimeKey<=@TimeKey AND B.EffectiveToTimeKey>=@TimeKey
				AND A.AccountEntityID=B.AccountEntityID

	UPDATE A
			set TotalProvision=isnull(b.AcclProvAmt,0)
				,AddlProvision=isnull(AddlProvision,0)+(isnull(b.AcclProvAmt,0)-isnull(TotalProvision,0))	
		FROM PRO.ACCOUNTCAL A
		INNER JOIN #ACT_ACLRTD_PROV b
			on a.AccountEntityID=b.AccountEntityID
		where isnull(b.AcclProvAmt,0)>isnull(TotalProvision,0)



UPDATE A SET
	TotalProvision=0
	,Provsecured=0
	,ProvUnsecured=0
FROM PRO.ACCOUNTCAL a
	INNER JOIN PRO.AdvAcRestructureCal B
		ON A.AccountEntityID=B.AccountEntityID
WHERE A.FinalAssetClassAlt_Key=1

UPDATE A
	SET TotalProvision=0
	,Provsecured=0
	,ProvUnsecured=0
FROM PRO.ACCOUNTCAL a
	WHERE A.FacilityType IN('LC','BG') -- NEED TO VERIFY

 IF OBJECT_ID('TEMPDB..#TOTALPROVCUST') IS NOT NULL
     DROP TABLE #TOTALPROVCUST

SELECT                              CUSTOMERENTITYID,
                                    SUM(ISNULL(TOTALPROVISION,0)) TOTALPROVISION, 
                                    SUM(ISNULL(BANKTOTALPROVISION,0)) BANKTOTPROVISION ,
                                    SUM(ISNULL(RBITOTALPROVISION,0)) RBITOTPROVISION 
                                    INTO #TOTALPROVCUST  FROM PRO.ACCOUNTCAL
GROUP BY CUSTOMERENTITYID


UPDATE A SET A.TOTPROVISION=B.TOTALPROVISION,A.BANKTOTPROVISION=B.BANKTOTPROVISION,A.RBITOTPROVISION=B.RBITOTPROVISION
FROM PRO.CUSTOMERCAL A INNER JOIN #TOTALPROVCUST B ON A.CUSTOMERENTITYID=B.CUSTOMERENTITYID

DROP TABLE #TOTALPROVCUST

UPDATE PRO.ACLRUNNINGPROCESSSTATUS 
      SET COMPLETED='Y',ERRORDATE=NULL,ERRORDESCRIPTION=NULL,COUNT=ISNULL(COUNT,0)+1
      WHERE RUNNINGPROCESSNAME='UpdationTotalProvision'

      -----------------Added for DashBoard 04-03-2021
Update BANDAUDITSTATUS set CompletedCount=CompletedCount+1 where BandName='ASSET CLASSIFICATION'

END TRY
BEGIN  CATCH

      UPDATE PRO.ACLRUNNINGPROCESSSTATUS 
      SET COMPLETED='N',ERRORDATE=GETDATE(),ERRORDESCRIPTION=ERROR_MESSAGE(),COUNT=ISNULL(COUNT,0)+1
      WHERE RUNNINGPROCESSNAME='UpdationTotalProvision'
END CATCH  
   SET NOCOUNT OFF                   
END 







GO