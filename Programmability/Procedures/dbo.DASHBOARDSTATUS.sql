SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO



CREATE PROC [dbo].[DASHBOARDSTATUS]

AS

BEGIN

--Select * from BANDAUDITSTATUS where StartDate=CAST(getdate() as Date)

----Added For ENBD DEmo
Select * from ENBD_MISDB.DBO.BANDAUDITSTATUS where StartDate=CAST(getdate() as Date) And BandName<>'ASSET CLASSIFICATION'
UNION
Select * from BANDAUDITSTATUS where StartDate=CAST(getdate() as Date) And BandName='ASSET CLASSIFICATION'

--Select * from ENBD_STGDB.dbo.Package_AUDIT where Execution_date=CAST(getdate() as Date)

--Select  Execution_date,PackageName,TableName as TaskName,ExecutionStartTime,ExecutionEndTime,TimeDuration_Sec,ExecutionStatus from ENBD_stgdb.dbo.Package_AUDIT where  Execution_date=CAST(getdate() as Date)

Select BandName,TaskName,PackageName,ExecutionStatus,ProcessingType from (
Select  Execution_date,B.BandName,PackageName,B.TaskName as TaskName,ExecutionStartTime,ExecutionEndTime,TimeDuration_Sec,ExecutionStatus,'ETL' ProcessingType
 from ENBD_STGDB.DBO.PACKAGE_AUDIT A
 INNER JOIN DimDashBoardETLAudit B ON A.TableName=B.PackageTableName
 where  A.Execution_date=CAST(getdate() as Date)


UNION ALL

--Select  Cast(GETDATE() as Date),Description BandName,Description PackageName,Description as TaskName,StartTime,EndTime,TimeTaken_Sec,
--(Case when Mode='RUNNING' then 0 
--		when Mode='COMPLETE' then 1 end)ExecutionStatus
-- from pro.ProcessMonitor WHERE CAST(StartTime as Date)=CAST(GETDATE() As Date)


 SELECT  CAST(GETDATE() AS DATE),'ASSET CLASSIFICATION' AS BANDNAME,--A.RUNNINGPROCESSNAME PACKAGENAME,

 CASE WHEN RUNNINGPROCESSNAME IN ('INSERTDATAFORASSETCLASSFICATIONENBD') THEN 'DATA PREPARATION' 
		WHEN RUNNINGPROCESSNAME IN ('REFERENCE_PERIOD_CALCULATION') THEN 'REFRENCE PERIOD CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('DPD_CALCULATION','MARKING_INMONTHMARK_CUSTOMER_ACCOUNT_LEVEL','MARKING_FLGDEG_DEGREASON','MAXDPD_REFERENCEPERIOD_CALCULATION') 
													THEN 'DPD CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('NPA_DATE_CALCULATION','UPDATE_ASSETCLASS','NPA_EROSION_AGING','FINAL_ASSETCLASS_NPADATE') THEN 'NPA DATE CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('UPGRADE_CUSTOMER_ACCOUNT') THEN 'UPGRADE MARKING' 
		WHEN RUNNINGPROCESSNAME IN ('SMA_MARKING','MARKING_FLGPNPA','MARKING_NPA_REASON_NPAACCOUNT') THEN 'SMA/PNPA MARKING' 
		WHEN RUNNINGPROCESSNAME IN ('UPDATEPROVISIONKEY_ACCOUNTWISE','UPDATENETBALANCE_ACCOUNTWISE') THEN 'PROVISION CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('GOVTGUARAPPROPRIATION','SECURITYAPPROPRIATION','UPDATEUSEDRV','PROVISIONCOMPUTATIONSECURED','GOVTGURCOVERAMOUNT') THEN 'SECURITY APPROPRIATION' 
		WHEN RUNNINGPROCESSNAME IN ('UPDATIONPROVISIONCOMPUTATIONUNSECURED','UPDATIONTOTALPROVISION') THEN 'TOTAL PROVISION UPDATES' 
		WHEN RUNNINGPROCESSNAME IN ('INSERTDATAINTOHISTTABLE') THEN 'MOVING DATA TO DATA HISTORY'  END AS PACKAGENAME,
 
 CASE WHEN RUNNINGPROCESSNAME IN ('INSERTDATAFORASSETCLASSFICATIONENBD') THEN 'DATA PREPARATION' 
		WHEN RUNNINGPROCESSNAME IN ('REFERENCE_PERIOD_CALCULATION') THEN 'REFRENCE PERIOD CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('DPD_CALCULATION','MARKING_INMONTHMARK_CUSTOMER_ACCOUNT_LEVEL','MARKING_FLGDEG_DEGREASON','MAXDPD_REFERENCEPERIOD_CALCULATION') 
													THEN 'DPD CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('NPA_DATE_CALCULATION','UPDATE_ASSETCLASS','NPA_EROSION_AGING','FINAL_ASSETCLASS_NPADATE') THEN 'NPA DATE CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('UPGRADE_CUSTOMER_ACCOUNT') THEN 'UPGRADE MARKING' 
		WHEN RUNNINGPROCESSNAME IN ('SMA_MARKING','MARKING_FLGPNPA','MARKING_NPA_REASON_NPAACCOUNT') THEN 'SMA/PNPA MARKING' 
		WHEN RUNNINGPROCESSNAME IN ('UPDATEPROVISIONKEY_ACCOUNTWISE','UPDATENETBALANCE_ACCOUNTWISE') THEN 'PROVISION CALCULATION' 
		WHEN RUNNINGPROCESSNAME IN ('GOVTGUARAPPROPRIATION','SECURITYAPPROPRIATION','UPDATEUSEDRV','PROVISIONCOMPUTATIONSECURED','GOVTGURCOVERAMOUNT') THEN 'SECURITY APPROPRIATION' 
		WHEN RUNNINGPROCESSNAME IN ('UPDATIONPROVISIONCOMPUTATIONUNSECURED','UPDATIONTOTALPROVISION') THEN 'TOTAL PROVISION UPDATES' 
		WHEN RUNNINGPROCESSNAME IN ('INSERTDATAINTOHISTTABLE') THEN 'MOVING DATA TO DATA HISTORY'  END AS TASKNAME,
 STARTTIME,ENDTIME,TIMETAKEN_SEC,
(CASE WHEN COMPLETED='N' THEN 0 
		WHEN COMPLETED='Y' THEN 1 END)EXECUTIONSTATUS,'ACL' ProcessingType
  
  FROM PRO.ACLRUNNINGPROCESSSTATUS A
 LEFT JOIN PRO.PROCESSMONITOR B ON A.RUNNINGPROCESSNAME=B.DESCRIPTION
 AND CAST(STARTTIME AS DATE)=CAST(GETDATE() AS DATE)
 And B.setID =(Select max(SetID) from PRO.PROCESSMONITOR where CAST(STARTTIME AS DATE)=CAST(GETDATE() AS DATE))
 where A.id<>24
 )A
 Group By BandName,TaskName,PackageName,ExecutionStatus,ProcessingType

END
GO