SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO


--USE YES_MISDB
CREATE PROCEDURE  [dbo].[RPDetailsUploadDataInUp]
	@Timekey INT,
	@UserLoginID VARCHAR(100),
	@OperationFlag INT,
	@MenuId INT,
	@AuthMode	CHAR(1),
	@filepath VARCHAR(MAX),
	@EffectiveFromTimeKey INT,
	@EffectiveToTimeKey	INT,
    @Result		INT=0 OUTPUT,
	@UniqueUploadID INT
	--@Authlevel varchar(5)

AS

--DECLARE @Timekey INT=24928,
--	@UserLoginID VARCHAR(100)='FNAOPERATOR',
--	@OperationFlag INT=1,
--	@MenuId INT=163,
--	@AuthMode	CHAR(1)='N',
--	@filepath VARCHAR(MAX)='',
--	@EffectiveFromTimeKey INT=24928,
--	@EffectiveToTimeKey	INT=49999,
--    @Result		INT=0 ,
--	@UniqueUploadID INT=41
BEGIN
SET DATEFORMAT DMY
	SET NOCOUNT ON;
	Declare @CollIDAutoGenerated   Int
    Declare @CollateralID		   varchar(30)=''
   --DECLARE @Timekey INT
   --SET @Timekey=(SELECT MAX(TIMEKEY) FROM dbo.SysProcessingCycle
			--	WHERE ProcessType='Quarterly')

			Set @Timekey=(
			select CAST(B.timekey as int)from SysDataMatrix A
			Inner Join SysDayMatrix B ON A.TimeKey=B.TimeKey
			 where A.CurrentStatus='C'
			 )

	PRINT @TIMEKEY

	SET @EffectiveFromTimeKey=@TimeKey
	SET @EffectiveToTimeKey=49999


	DECLARE @FilePathUpload	VARCHAR(100)
				   SET @FilePathUpload=@UserLoginId+'_'+@filepath
					PRINT '@FilePathUpload'
					PRINT @FilePathUpload


		BEGIN TRY

		--BEGIN TRAN
		
IF (@MenuId=24735)
BEGIN
 --Set @FilePathUpload='mismaker_CollateralUpload_3.xlsx'

	IF (@OperationFlag=1)

	BEGIN

		IF NOT (EXISTS (SELECT 1 FROM RPDetailsUpload_stg  where filname=@FilePathUpload))

							BEGIN
									 --Rollback tran
									SET @Result=-8

								RETURN @Result
							END
			
                   Print 'Sachin'
				   
		IF EXISTS(SELECT 1 FROM RPDetailsUpload_stg WHERE filname=@FilePathUpload)
		BEGIN
		
		INSERT INTO ExcelUploadHistory
	(
		UploadedBy	
		,DateofUpload	
		,AuthorisationStatus	
		--,Action	
		,UploadType
		,EffectiveFromTimeKey	
		,EffectiveToTimeKey	
		,CreatedBy	
		,DateCreated	
		
	)

	SELECT @UserLoginID
		   ,GETDATE()
		   ,'NP'
		   --,'NP'
		   ,'RP Details Upload'
		   ,@EffectiveFromTimeKey
		   ,@EffectiveToTimeKey
		   ,@UserLoginID
		   ,GETDATE()

		   --sp
			   PRINT @@ROWCOUNT

		   DECLARE @ExcelUploadId INT
	SET 	@ExcelUploadId=(
	SELECT MAX(UniqueUploadID) FROM  ExcelUploadHistory
	)
		
			Insert into UploadStatus (FileNames,UploadedBy,UploadDateTime,UploadType)
		Values(@filepath,@UserLoginID ,GETDATE(),'RP Details Upload')


	 SET dateformat DMY

		INSERT INTO [RP_Portfolio_Upload_Mod]
		(
						SrNo,
					UploadID,
					CustomerID,
					--ReportingBank_LenderCode,
					BankArrangementDesc,
					LeadBankName,
					ExposureBucket,
					--RefrenceDate,
					ICAStatus,
					NotSigingICAReason,
					ICAExecutionDate,
					NatureRPApprovalDate,
					RPNature,
					OtherRPNature,
					IBCFilingDate,
					IBCAddmissionDate,
					--ImplementationStatus,
					--ActRPImpDate,
					--OutOfDefaultDate,
					StatusOfRevisedRPDeadline,
					--BorrowerPAN,
					CreatedBy,
					DateCreated,
						AuthorisationStatus,
						EffectiveFromTimeKey,
						EffectiveToTimeKey,
						--IfRPisRectificationthenRiskReviewTimeline,
						RP_OutOfDateAllBanksDeadline
						
						
		)
		
		SELECT
			SrNo,
			@ExcelUploadId,			
			CustomerID,
					--[1stReportingBankLenderCode],
					BankingArrangement,
					Nameofleadbank,
					ExposureBucket,
					--Case When ISNULL(ReferenceDate,'')='' Then NULL ELSE Convert(Date,ReferenceDate) END ReferenceDate,
					ICAStatus,
					ReasonfornotsigningICA,
					Case When ISNULL(ICAExecutionDate,'')='' Then NULL ELSE Convert(Date,ICAExecutionDate) END ICAExecutionDate,
				    Case When ISNULL(ApproveddateofResolutionPlan,'')='' Then NULL ELSE Convert(Date,ApproveddateofResolutionPlan) END NatureRPApprovalDate,

					NatureofRP,
					IfOtherRPDescription,
					  Case When ISNULL(IBCFilingDate,'')='' Then NULL ELSE Convert(Date,IBCFilingDate) END IBCFilingDate,
                    Case When ISNULL(IBCAdmissiondate,'')='' Then NULL ELSE Convert(Date,IBCAdmissiondate) END IBCAddmissionDate,

					
					--ImplementationStatus,
					--Case When ISNULL(ActualRPImplDate,'')='' Then NULL ELSE Convert(Date,ActualRPImplDate) END ActRPImpDate,

					--Case When ISNULL(OutofdefaultdateallbankspostinitialRPdeadline,'')='' Then NULL ELSE Convert(Date,OutofdefaultdateallbankspostinitialRPdeadline) END OutOfDefaultDate,
					
					RevisedRPDeadline,
					--BorrowerPAN,
		    @UserLoginID,
			GETDATE(),
			'NP',
			@Timekey,
			49999,
			 --Case When ISNULL(IfRPisRectificationthenRiskReviewTimeline,'')='' Then NULL ELSE Convert(Date,IfRPisRectificationthenRiskReviewTimeline) END IfRPisRectificationthenRiskReviewTimeline,
			 			 Case When ISNULL(OutofdefaultdateallbankspostinitialRPdeadline,'')='' Then NULL ELSE Convert(Date,OutofdefaultdateallbankspostinitialRPdeadline) END OutofdefaultdateallbankspostinitialRPdeadline
			
		FROM RPDetailsUpload_stg
		where filname=@FilePathUpload

		Update A
		Set A.CustomerEntityID=B.CustomerEntityID
		FROM [RP_Portfolio_Upload_Mod] A
		INNER Join Curdat.CustomerBasicDetail B
		ON A.CustomerID =B.CustomerID
		                                                                                                                                   
	------------------------Change Fields--------------------------	                                                                                                                                   

	IF OBJECT_ID('TempDB..#RPModuleDetailsUpload') Is Not Null
	Drop Table #RPModuleDetailsUpload

	Create TAble #RPModuleDetailsUpload
	(
	CustomerID Varchar(30), FieldName Varchar(50),SrNo varchar(max))

	Insert Into #RPModuleDetailsUpload(CustomerID,FieldName)
	Select CustomerID, 'CustomerID' FieldName from RPDetailsUpload_stg Where isnull(CustomerID,'')<>'' 
	UNION ALL
	Select CustomerID, 'BankingArrangement' FieldName from RPDetailsUpload_stg Where isnull(BankingArrangement,'')<>'' 
	UNION ALL
	Select CustomerID, 'Nameofleadbank' FieldName from RPDetailsUpload_stg Where isnull(Nameofleadbank,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'Exposurebucket' FieldName from RPDetailsUpload_stg Where isnull(Exposurebucket,'')<>'' --AdditionalProvision Is not NULL
	UNION ALL
	Select CustomerID, 'ReferenceDate' FieldName from RPDetailsUpload_stg Where isnull(ReferenceDate,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'ICAStatus' FieldName from RPDetailsUpload_stg Where isnull(ICAStatus,'')<>''
	UNION ALL
	Select CustomerID, 'ReasonfornotsigningICA' FieldName from RPDetailsUpload_stg Where isnull(ReasonfornotsigningICA,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'ICAExecutionDate' FieldName from RPDetailsUpload_stg Where isnull(ICAExecutionDate,'')<>''
	UNION ALL
	Select CustomerID, 'ApproveddateofResolutionPlan' FieldName from RPDetailsUpload_stg Where isnull(ApproveddateofResolutionPlan,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'NatureofRP' FieldName from RPDetailsUpload_stg Where isnull(NatureofRP,'')<>''
	UNION ALL
	Select CustomerID, 'IfOtherRPDescription' FieldName from RPDetailsUpload_stg Where isnull(IfOtherRPDescription,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'IBCFilingDate' FieldName from RPDetailsUpload_stg Where isnull(IBCFilingDate,'')<>''
	UNION ALL
	Select CustomerID, 'IBCAdmissiondate' FieldName from RPDetailsUpload_stg Where isnull(IBCAdmissiondate,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'ImplementationStatus' FieldName from RPDetailsUpload_stg Where isnull(ImplementationStatus,'')<>''
		UNION ALL
	Select CustomerID, 'ActualRPImplDate' FieldName from RPDetailsUpload_stg Where isnull(ActualRPImplDate,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'OutofdefaultdateallbankspostinitialRPdeadline' FieldName from RPDetailsUpload_stg Where isnull(OutofdefaultdateallbankspostinitialRPdeadline,'')<>''
		UNION ALL
	Select CustomerID, 'RevisedRPDeadline' FieldName from RPDetailsUpload_stg Where isnull(RevisedRPDeadline,'')<>''  --SecurityValue Is not NULL
	
	
	
	--select * 
	Update B set B.SrNo=A.ScreenFieldNo
	from MetaScreenFieldDetail A
	Inner Join #RPModuleDetailsUpload B ON A.CtrlName=B.FieldName
	Where A.MenuId=14592 And A.IsVisible='Y'



	
				 IF OBJECT_ID('TEMPDB..#NEWTRANCHE')  IS NOT NULL
					DROP TABLE #NEWTRANCHE

					SELECT * INTO #NEWTRANCHE FROM(
					SELECT 
						 SS.CustomerID,
						STUFF((SELECT ',' + US.SrNo 
							FROM #RPModuleDetailsUpload US
							WHERE US.CustomerID = SS.CustomerID
							FOR XML PATH('')), 1, 1, '') [REPORTIDSLIST]
						FROM CustlevelNPAMOCDetails_stg SS 
						GROUP BY SS.CustomerID
						)B
						ORDER BY 1

						--Select * from #NEWTRANCHE

					--SELECT * 
					UPDATE A SET A.ChangeField=B.REPORTIDSLIST
					FROM DBO.RP_Portfolio_Upload_Mod A
					INNER JOIN #NEWTRANCHE B ON A.CustomerID=B.CustomerID
					WHERE  A.EFFECTIVEFROMTIMEKEY<=@TimeKey AND A.EFFECTIVETOTIMEKEY>=@TimeKey
					And A.UploadID=@ExcelUploadId

-------------------------------------------------------------------



		
		---DELETE FROM STAGING DATA Sachin
		 DELETE FROM RPDetailsUpload_stg
		 WHERE filname=@FilePathUpload

		 -- DELETE FROM CollateralDetails_stg
		 --WHERE filname=@FilePathUpload
		 --RETURN @ExcelUploadId

		  

END
	
	END
	IF (@OperationFlag=16)----AUTHORIZE

	BEGIN
		
		UPDATE 
			[RP_Portfolio_Upload_Mod] 
			SET 
			AuthorisationStatus	='1A'
			,ApprovedByFirstLevel	=@UserLoginID
			,DateApprovedFirstLevel	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

			   UPDATE 
		   ExcelUploadHistory
		   SET AuthorisationStatus='1A'
		   ,ApprovedBy	=@UserLoginID
		   where UniqueUploadID=@UniqueUploadID
		   AND UploadType='RP Details Upload'

		
END

--------------------------------------------

	IF (@OperationFlag=20)----AUTHORIZE

	BEGIN
		
		UPDATE 
			[RP_Portfolio_Upload_Mod] 
			SET 
			AuthorisationStatus	='A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

		
			
			--Update  A
			--Set A.EffectiveToTimeKey=A.EffectiveFromTimeKey-1
			--from [CollateralDetailUpload] A
			--inner join [CollateralDetailUpload_Mod] B
			--ON A.AccountID=B.AccountID
			--AND B.EffectiveFromTimeKey <=@Timekey
			--AND B.EffectiveToTimeKey >=@Timekey
			--Where B.UploadId=@UniqueUploadID
			--AND A.EffectiveToTimeKey >=49999

		
		Update  A
			Set A.EffectiveToTimeKey=A.EffectiveFromTimeKey-1
			from RP_Portfolio_Details A
			inner join [RP_Portfolio_Upload_Mod] B
			ON A.CustomerID=B.CustomerID
			AND B.EffectiveFromTimeKey <=@Timekey
			AND B.EffectiveToTimeKey >=@Timekey
			Where B.UploadId=@UniqueUploadID
			 
			

		

						 SET dateformat DMY

						 

			INSERT INTO RP_Portfolio_Details
		(
		   
			CustomerID,
			CustomerEntityID,
        --NameOf1stReportingBanklenderAlt_Key,
		BankingArrangementAlt_Key ,
        LeadBankAlt_Key,
		ExposureBucketAlt_Key,
		--ReferenceDate,
		ICAStatusAlt_Key,
        ReasonnotsigningICA,
		ICAExecutionDate,
		RP_ApprovalDate,
		RPNatureAlt_Key,
		If_Other,
		IBCFillingDate,
		IBCAddmissionDate,
		RP_ImplStatusAlt_Key,
		--Actual_Impl_Date,
		RP_OutOfDateAllBanksDeadline,
		DefaultStatusAlt_Key,
		AuthorisationStatus,
		EffectiveFromTimeKey,
		EffectiveToTimeKey,
			CreatedBy,
			DateCreated,
			ModifiedBy,
			DateModified,
			ApprovedBy,
			DateApproved,
			ScreenFlag,
			ApprovedByFirstLevel,
			DateApprovedFirstLevel,
			IsActive
			--PAN_No
			--IfRPisRectificationthenRiskReviewTimeline

			
		   																					
						
		)
			SELECT	A.CustomerID,
			CustomerEntityID,
					--C.BankAlt_Key,
					D.BankingArrangementAlt_Key,
					X.BankRPAlt_Key,
					E.ExposureBucketAlt_Key,
					--Convert(Date,A.RefrenceDate),
					F.ParameterAlt_Key,
					A.NotSigingICAReason,
					Convert(Date,A.ICAExecutionDate),
					Convert(Date,A.NatureRPApprovalDate),
					G.RPNatureAlt_Key,
					A.OtherRPNature,
					Convert(Date,A.IBCFilingDate),
					Convert(Date,A.IBCAddmissionDate),
					  Case When NatureRPApprovalDate IS NOT NULL Then 2 ELSE NULL END NatureRPApprovalDate,

					--Convert(Date,A.ActRPImpDate),
					Convert(Date,A.RP_OutOfDateAllBanksDeadline),
					I.PARAmeteralt_key,						
					'A',
					@Timekey,
					49999,
					A.CreatedBy,
					A.DateCreated,
					A.ModifiedBy,
					A.DateModified,
					@UserLoginID,
					Getdate()	,
					'U',
					A.ApprovedByFirstLevel,
			A.DateApprovedFirstLevel,
			Case When H.ParameterAlt_Key in(1,3) Then 'N' Else 'Y' End as isactive
			--BorrowerPAN
			--Convert(Date,A.IfRPisRectificationthenRiskReviewTimeline)

			FROM [RP_Portfolio_Upload_Mod] A			
			LEFT JOIN DimBankRP C ON A.ReportingBank_LenderCode=C.BankName
			LEFT JOIN DimBankRP x ON a.LeadBankName=X.BankName
			LEFT JOIN DimBankingArrangement D ON A.BankArrangementDesc=D.ArrangementDescription
			LEFT JOIN DimExposureBucket E ON A.ExposureBucket=E.BucketName
			LEFT JOIN (Select ParameterAlt_Key,ParameterName,'DimICAStatus' as Tablename 
		            from DimParameter where DimParameterName='DimICAStatus'
					and EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey) F
				ON A.ICAStatus=F.ParameterName	
			LEFT JOIN (Select RPNatureAlt_Key,RPDescription,'DimResolutionPlanNature' as Tablename 
						from DimResolutionPlanNature
					Where EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey) G
					ON A.RPNature=G.RPDescription
			LEFT JOIN (		Select ParameterAlt_Key,ParameterName,'DimImplementationStatus' as Tablename 
		               from DimParameter where DimParameterName='ImplementationStatus'
		and EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey) H
		ON A.ImplementationStatus =H.ParameterName 		
			LEFT JOIN (Select ParameterAlt_Key,ParameterName,'DefaultStatus' as Tablename 		
		from DimParameter where DimParameterName='BorrowerDefaultStatus'
		and EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey) i
					ON A.StatusOfRevisedRPDeadline=I.ParameterName																		
			WHERE  A.UploadId=@UniqueUploadID and A.EffectiveToTimeKey>=@Timekey 

			
 

		


				UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='A',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='RP Details Upload'

				


	END


	IF (@OperationFlag=17)----REJECT

	BEGIN
		
		UPDATE 
			[RP_Portfolio_Upload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'

			UPDATE 
			[RP_Portfolio_Upload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'
			----SELECT * FROM IBPCPoolDetail

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='RP Details Upload'



	END

IF (@OperationFlag=21)----REJECT

	BEGIN
		
		UPDATE 
			[RP_Portfolio_Upload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus in('NP','1A')

	
			----SELECT * FROM IBPCPoolDetail

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='RP Details Upload'



	END


END


	--COMMIT TRAN
		---SET @Result=CASE WHEN  @OperationFlag=1 THEN @UniqueUploadID ELSE 1 END
		SET @Result=CASE WHEN  @OperationFlag=1 AND @MenuId=24735 THEN @ExcelUploadId 
					ELSE 1 END

		
		 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath

		 ---- IF EXISTS(SELECT 1 FROM IBPCPoolDetail_stg WHERE filEname=@FilePathUpload)
		 ----BEGIN
			----	 DELETE FROM IBPCPoolDetail_stg
			----	 WHERE filEname=@FilePathUpload

			----	 PRINT 'ROWS DELETED FROM IBPCPoolDetail_stg'+CAST(@@ROWCOUNT AS VARCHAR(100))
		 ----END
		 

		RETURN @Result
		--RETURN @ExcelUploadId
	END TRY
	BEGIN CATCH 
	   --ROLLBACK TRAN
	   --PRINT 'CatchDelete'
	   --PRINT 'UniqueUploadID'
	   --PRINT @UniqueUploadID
	   --PRINT 'ExcelUploadId'
	   --PRINT @ExcelUploadId

	   Delete from ExcelUploadHistory WHERE UniqueUploadID=@ExcelUploadId
				--AND UniqueUploadID=@UniqueUploadID
				--AND UploadType='RPModule Lender Upload'
	SELECT ERROR_MESSAGE(),ERROR_LINE()
	SET @Result=-1
	 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath
	RETURN -1
	END CATCH

END


GO