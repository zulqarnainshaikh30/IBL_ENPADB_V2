SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO

--USE YES_MISDB
CREATE PROCEDURE  [dbo].[RPModuleLenderUploadDataInUp]
	@Timekey INT,
	@UserLoginID VARCHAR(100),
	@OperationFlag INT,
	@MenuId INT,
	@AuthMode	CHAR(1),
	@filepath VARCHAR(MAX),
	@EffectiveFromTimeKey INT,
	@EffectiveToTimeKey	INT,
    @Result		INT=0 OUTPUT,
	@UniqueUploadID INT
	--@Authlevel varchar(5)

AS

--DECLARE @Timekey INT=24928,
--	@UserLoginID VARCHAR(100)='FNAOPERATOR',
--	@OperationFlag INT=1,
--	@MenuId INT=163,
--	@AuthMode	CHAR(1)='N',
--	@filepath VARCHAR(MAX)='',
--	@EffectiveFromTimeKey INT=24928,
--	@EffectiveToTimeKey	INT=49999,
--    @Result		INT=0 ,
--	@UniqueUploadID INT=41
BEGIN
SET DATEFORMAT DMY
	SET NOCOUNT ON;
	Declare @CollIDAutoGenerated   Int
    Declare @CollateralID		   varchar(30)=''
   --DECLARE @Timekey INT
   --SET @Timekey=(SELECT MAX(TIMEKEY) FROM dbo.SysProcessingCycle
			--	WHERE ProcessType='Quarterly')

			Set @Timekey=(
			select CAST(B.timekey as int)from SysDataMatrix A
			Inner Join SysDayMatrix B ON A.TimeKey=B.TimeKey
			 where A.CurrentStatus='C'
			 )

	PRINT @TIMEKEY

	SET @EffectiveFromTimeKey=@TimeKey
	SET @EffectiveToTimeKey=49999


	DECLARE @FilePathUpload	VARCHAR(100)
				   SET @FilePathUpload=@UserLoginId+'_'+@filepath
					PRINT '@FilePathUpload'
					PRINT @FilePathUpload


		BEGIN TRY

		--BEGIN TRAN
		
IF (@MenuId=24734)
BEGIN
 --Set @FilePathUpload='mismaker_CollateralUpload_3.xlsx'

	IF (@OperationFlag=1)

	BEGIN

		IF NOT (EXISTS (SELECT 1 FROM RPModuleLender_stg  where filname=@FilePathUpload))

							BEGIN
									 --Rollback tran
									SET @Result=-8

								RETURN @Result
							END
			
                   Print 'Sachin'
				   
		IF EXISTS(SELECT 1 FROM RPModuleLender_stg WHERE filname=@FilePathUpload)
		BEGIN
		
		INSERT INTO ExcelUploadHistory
	(
		UploadedBy	
		,DateofUpload	
		,AuthorisationStatus	
		--,Action	
		,UploadType
		,EffectiveFromTimeKey	
		,EffectiveToTimeKey	
		,CreatedBy	
		,DateCreated	
		
	)

	SELECT @UserLoginID
		   ,GETDATE()
		   ,'NP'
		   --,'NP'
		   ,'RPModule Lender Upload'
		   ,@EffectiveFromTimeKey
		   ,@EffectiveToTimeKey
		   ,@UserLoginID
		   ,GETDATE()

		   --sp
			   PRINT @@ROWCOUNT

		   DECLARE @ExcelUploadId INT
	SET 	@ExcelUploadId=(
	SELECT MAX(UniqueUploadID) FROM  ExcelUploadHistory
	)
		
			Insert into UploadStatus (FileNames,UploadedBy,UploadDateTime,UploadType)
		Values(@filepath,@UserLoginID ,GETDATE(),'RPModule Lender Upload')

	 SET dateformat DMY
	  
		INSERT INTO [RPModuleLender_Mod]
		(
						SrNo,
					UploadID,
					UCICID,
					CustomerID,
					BorrowerPAN,
					BorrowerName,
					LenderName,
					InDefaultDate,
					OutDefaultDate,
					
					CreatedBy,
					DateCreated,
						AuthorisationStatus,
						EffectiveFromTimeKey,
						EffectiveToTimeKey
						
						
		)
		
		SELECT
			SrNo,
			@ExcelUploadId,
			
			UCICID,
			CustomerID,
			BorrowerPAN,
			BorrowerName,
			LenderName,
			--case when InDefaultDate =('1900-01-01')  OR InDefaultDate IN  ('01-01-1900')
			--     THEN NULL Else InDefaultDate end,
			Case when InDefaultDate='' then NULL Else InDefaultDate End InDefaultDate,
			Case when OutofDefaultDate='' then NULL Else OutofDefaultDate End OutofDefaultDate ,
		    @UserLoginID,
			GETDATE(),
			'NP',
			@Timekey,
			49999
			
		FROM RPModuleLender_stg
		where filname=@FilePathUpload
		AND InDefaultDate <>'' AND OutofDefaultDate =''

		

		INSERT INTO [RPModuleLender_Mod]
		(
						SrNo,
					UploadID,
					UCICID,
					CustomerID,
					BorrowerPAN,
					BorrowerName,
					LenderName,
					InDefaultDate,
					OutDefaultDate,
					
					CreatedBy,
					DateCreated,
						AuthorisationStatus,
						EffectiveFromTimeKey,
						EffectiveToTimeKey
						
						
		)
		
		SELECT
			A.SrNo,
			@ExcelUploadId,
			
			A.UCICID,
			A.CustomerID,
			A.BorrowerPAN,
			A.BorrowerName,
			A.LenderName,
			--case when InDefaultDate =('1900-01-01')  OR InDefaultDate IN  ('01-01-1900')
			--     THEN NULL Else InDefaultDate end,
			Case when A.InDefaultDate IS NULL then NULL Else A.InDefaultDate End InDefaultDate,
			Case when A.OutDefaultDate IS NULL then NULL Else A.OutDefaultDate End OutofDefaultDate ,
		    @UserLoginID,
			GETDATE(),
			'NP',
			@Timekey,
			49999
			
		From [RPModuleLender_Mod] A
			 INNER JOIN RPModuleLender_stg B
			 ON A.CustomerID =B.CustomerID 
			 AND A.LenderName=B.LenderName
		where filname=@FilePathUpload
		AND B.InDefaultDate ='' AND B.OutofDefaultDate <>''
		 AND A.EffectiveFromTimeKey<=@Timekey AND A.EffectiveToTimeKey>=@Timekey

Update A
		SET EffectiveToTimeKey=EffectiveFromTimeKey-1
		From [RPModuleLender_Mod] A
			 INNER JOIN RPModuleLender_stg B
			 ON A.CustomerID =B.CustomerID 
			 AND A.LenderName=B.LenderName
			 AND Entity_Key IN(Select  MIN(Entity_Key)
			 From [RPModuleLender_Mod] A
			 Inner JOIN RPModuleLender_stg B
			 ON A.CustomerID =B.CustomerID 
			 AND A.LenderName=B.LenderName
			
			 GROUP BY A.CustomerID,A.LenderName
			 Having(count(1))>1)

			

 Update A
 Set A.OutDefaultDate=B.OutofDefaultDate

 From [RPModuleLender_Mod] A
 INNER JOIN RPModuleLender_stg B
 ON A.CustomerID =B.CustomerID 
 AND A.LenderName=B.LenderName
 WHERE  B.OutofDefaultDate <>''
 
 AND A.EffectiveFromTimeKey<=@Timekey AND A.EffectiveToTimeKey>=@Timekey
  


	------------------------Change Fields--------------------------	                                                                                                                                   

	IF OBJECT_ID('TempDB..#RPModuleLenderUpload') Is Not Null
	Drop Table #RPModuleLenderUpload

	Create TAble #RPModuleLenderUpload
	(
	CustomerID Varchar(30), FieldName Varchar(50),SrNo varchar(max))

	Insert Into #RPModuleLenderUpload(CustomerID,FieldName)
	Select CustomerID, 'CustomerID' FieldName from RPModuleLender_stg Where isnull(CustomerID,'')<>'' 
	UNION ALL
	Select CustomerID, 'LenderName' FieldName from RPModuleLender_stg Where isnull(LenderName,'')<>'' 
	UNION ALL
	Select CustomerID, 'InDefaultDate' FieldName from RPModuleLender_stg Where isnull(InDefaultDate,'')<>''  --SecurityValue Is not NULL
	UNION ALL
	Select CustomerID, 'OutofDefaultDate' FieldName from RPModuleLender_stg Where isnull(OutofDefaultDate,'')<>'' --AdditionalProvision Is not NULL

	--select * 
	Update B set B.SrNo=A.ScreenFieldNo
	from MetaScreenFieldDetail A
	Inner Join #RPModuleLenderUpload B ON A.CtrlName=B.FieldName
	Where A.MenuId=14591 And A.IsVisible='Y'



	
				 IF OBJECT_ID('TEMPDB..#NEWTRANCHE')  IS NOT NULL
					DROP TABLE #NEWTRANCHE

					SELECT * INTO #NEWTRANCHE FROM(
					SELECT 
						 SS.CustomerID,
						STUFF((SELECT ',' + US.SrNo 
							FROM #RPModuleLenderUpload US
							WHERE US.CustomerID = SS.CustomerID
							FOR XML PATH('')), 1, 1, '') [REPORTIDSLIST]
						FROM CustlevelNPAMOCDetails_stg SS 
						GROUP BY SS.CustomerID
						)B
						ORDER BY 1

						--Select * from #NEWTRANCHE

					--SELECT * 
					UPDATE A SET A.ChangeField=B.REPORTIDSLIST
					FROM DBO.RPModuleLender_Mod A
					INNER JOIN #NEWTRANCHE B ON A.CustomerID=B.CustomerID
					WHERE  A.EFFECTIVEFROMTIMEKEY<=@TimeKey AND A.EFFECTIVETOTIMEKEY>=@TimeKey
					And A.UploadID=@ExcelUploadId

-------------------------------------------------------------------
		
		---DELETE FROM STAGING DATA Sachin
		 DELETE FROM RPModuleLender_stg
		 WHERE filname=@FilePathUpload

		 -- DELETE FROM CollateralDetails_stg
		 --WHERE filname=@FilePathUpload
		 --RETURN @ExcelUploadId

		  

END
	
	END
	IF (@OperationFlag=16)----AUTHORIZE

	BEGIN
		
		UPDATE 
			[RPModuleLender_Mod] 
			SET 
			AuthorisationStatus	='1A'
			,ApprovedByFirstLevel	=@UserLoginID
			,DateApprovedFirstLevel	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

			   UPDATE 
		   ExcelUploadHistory
		   SET AuthorisationStatus='1A'
		   ,ApprovedBy	=@UserLoginID
		   where UniqueUploadID=@UniqueUploadID
		   AND UploadType='RPModule Lender Upload'

		
END

--------------------------------------------

	IF (@OperationFlag=20)----AUTHORIZE

	BEGIN
		
		UPDATE 
			[RPModuleLender_Mod] 
			SET 
			AuthorisationStatus	='A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

		
			--Update  A
			--Set A.EffectiveToTimeKey=A.EffectiveFromTimeKey-1
			--from [CollateralDetailUpload] A
			--inner join [CollateralDetailUpload_Mod] B
			--ON A.AccountID=B.AccountID
			--AND B.EffectiveFromTimeKey <=@Timekey
			--AND B.EffectiveToTimeKey >=@Timekey
			--Where B.UploadId=@UniqueUploadID
			--AND A.EffectiveToTimeKey >=49999
--alter table RPModuleLender_Mod
--add LenderName_altkey int

						 SET dateformat DMY
		Update B
		SET B.LenderName_altkey=C.BankRPAlt_Key
		From RPModuleLender_Mod B
		INNER JOIN DimBankRP C ON B.LenderName=C.BankName
		Where B.UploadId=@UniqueUploadID
		


			INSERT INTO RP_Lender_Details
		(
		   
			CustomerID,
			ReportingLenderAlt_Key,
			InDefaultDate,
            OutOfDefaultDate,
			
				 AuthorisationStatus,
		     EffectiveFromTimeKey,
			EffectiveToTimeKey,
			CreatedBy,
			DateCreated,
			ModifiedBy,
			DateModified,
			ApprovedBy,
			DateApproved,
			RPDetailsActiveCustomer_EntityKey,
			ApprovedByFirstLevel,
			DateApprovedFirstLevel,
			[Status],
			DefaultStatus
	   																					
						
		)
			SELECT 
			
			A.CustomerID,
			A.LenderName_altkey,
			A.InDefaultDate,
A.OutDefaultDate,
						
					'A'	,
					@Timekey,
					49999,
					A.CreatedBy,
					A.DateCreated,
					A.ModifiedBy,
					A.DateModified,
					@UserLoginID,
					Getdate(),
					D.EntityKey,
					A.ApprovedByFirstLevel,
			A.DateApprovedFirstLevel,
			'O',
			Case When InDefaultDate<>'' Then 'in defualt'
			When OutDefaultDate<>'' Then 'Out default' END
			
					
					
					
			FROM [RPModuleLender_Mod] A
			
			--LEFT JOIN DimBankRP C ON A.LenderName=C.BankName
			LEFT JOIN  	RP_Portfolio_Details D ON A.CustomerID =D.CustomerID						
									
			WHERE  A.UploadId=@UniqueUploadID and A.EffectiveToTimeKey>=@Timekey 
			AND InDefaultDate IS NOT NULL AND OutDefaultDate IS NULL
			AND D.IsActive='Y' 

		
	
	

		
 Update A
 Set A.OutOfDefaultDate=B.OutDefaultDate


 From RP_Lender_Details A
 INNER JOIN [RPModuleLender_Mod] B
 ON A.CustomerID =B.CustomerID 
 AND A.ReportingLenderAlt_Key=B.LenderName_Altkey
 WHERE B.UploadId=@UniqueUploadID
 AND B.OutDefaultDate iS NOT NULL

  Update A
 Set  A.[Status]='C'

 From RP_Lender_Details A
 INNER JOIN [RPModuleLender_Mod] B
 ON A.CustomerID =B.CustomerID 
 AND A.ReportingLenderAlt_Key=B.LenderName_Altkey
 WHERE B.UploadId=@UniqueUploadID
 AND B.OutDefaultDate iS NOT NULL 
 ----------------
Update A
Set  DefaultStatus='Out-Defualt'
From RP_Lender_Details A
 INNER JOIN [RPModuleLender_Mod] B
 ON A.CustomerID =B.CustomerID 
 AND A.ReportingLenderAlt_Key=B.LenderName_Altkey
 WHERE B.UploadId=@UniqueUploadID
and  A.OutOfDefaultDate iS NOT NULL  and A.InDefaultDate is not null
------------------


				UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='A',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='RPModule Lender Upload'

				


	END


	IF (@OperationFlag=17)----REJECT

	BEGIN
		
		UPDATE 
			[RPModuleLender_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'

			UPDATE 
			[RPModuleLender_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'
			----SELECT * FROM IBPCPoolDetail


			INSERT INTO [RPModuleLender_Mod]
		(
						SrNo,
					UploadID,
					UCICID,
					CustomerID,
					BorrowerPAN,
					BorrowerName,
					LenderName,
					InDefaultDate,
					OutDefaultDate,
					
					CreatedBy,
					DateCreated,
						AuthorisationStatus,
						EffectiveFromTimeKey,
						EffectiveToTimeKey
						
						
		)
		
		SELECT
			A.SrNo,
			UploadID,
			
			A.UCICID,
			A.CustomerID,
			A.BorrowerPAN,
			A.BorrowerName,
			A.LenderName,
			--case when InDefaultDate =('1900-01-01')  OR InDefaultDate IN  ('01-01-1900')
			--     THEN NULL Else InDefaultDate end,
			Case when A.InDefaultDate IS NULL then NULL Else A.InDefaultDate End InDefaultDate,
			NULL OutofDefaultDate ,
		    @UserLoginID,
			GETDATE(),
			'A',
			@Timekey,
			49999
			
		From [RPModuleLender_Mod] A
			 Where
		 A.InDefaultDate IS NOT NULL AND A.OutDefaultDate IS NOT NULL
		 AND UploadID=@UniqueUploadID
		 AND AuthorisationStatus='R'
		 

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='RPModule Lender Upload'



	END

IF (@OperationFlag=21)----REJECT

	BEGIN
		
		UPDATE 
			[RPModuleLender_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus in('NP','1A')

			UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus in('NP','1A')
			----SELECT * FROM IBPCPoolDetail

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='RPModule Lender Upload'



	END


END


	--COMMIT TRAN
		---SET @Result=CASE WHEN  @OperationFlag=1 THEN @UniqueUploadID ELSE 1 END
		SET @Result=CASE WHEN  @OperationFlag=1 AND @MenuId=24734 THEN @ExcelUploadId 
					ELSE 1 END

		
		 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath

		 ---- IF EXISTS(SELECT 1 FROM IBPCPoolDetail_stg WHERE filEname=@FilePathUpload)
		 ----BEGIN
			----	 DELETE FROM IBPCPoolDetail_stg
			----	 WHERE filEname=@FilePathUpload

			----	 PRINT 'ROWS DELETED FROM IBPCPoolDetail_stg'+CAST(@@ROWCOUNT AS VARCHAR(100))
		 ----END
		 

		RETURN @Result
		--RETURN @ExcelUploadId
	END TRY
	BEGIN CATCH 
	   --ROLLBACK TRAN
	   --PRINT 'CatchDelete'
	   --PRINT 'UniqueUploadID'
	   --PRINT @UniqueUploadID
	   --PRINT 'ExcelUploadId'
	   --PRINT @ExcelUploadId

	   Delete from ExcelUploadHistory WHERE UniqueUploadID=@ExcelUploadId
				--AND UniqueUploadID=@UniqueUploadID
				--AND UploadType='RPModule Lender Upload'
	SELECT ERROR_MESSAGE(),ERROR_LINE()
	SET @Result=-1
	 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath
	RETURN -1
	END CATCH

END

GO