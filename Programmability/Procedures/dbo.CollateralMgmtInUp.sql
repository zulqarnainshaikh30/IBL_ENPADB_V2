SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO
CREATE PROC [dbo].[CollateralMgmtInUp]

--Declare
							@AccountID						varchar(30)=''
							,@UCICID						varchar(12)=''	
							,@CustomerID					varchar(100)=''
							,@CustomerName					varchar(200)=''
							,@TaggingAlt_Key				Int=0
							,@DistributionAlt_Key			int=0
							,@CollateralID					varchar(30)=''
							--,@CollateralCode				varchar(50)=''
							,@CollateralTypeAlt_Key			int=0
							,@CollateralSubTypeAlt_Key		int=0
							,@CollateralOwnerTypeAlt_Key	int=0
							,@CollateralOwnerShipTypeAlt_Key int=0
							,@ChargeTypeAlt_Key				int=0
							,@ChargeNatureAlt_Key			int=0
							,@ShareAvailabletoBankAlt_Key	int=0
							,@CollateralShareamount			decimal(18,2)
							--,@TotalCollateralvalueatcustomerlevel	decimal(18,2)
							,@ChangeField                   Varchar(Max)=''
						    ,@CollateralValueatSanctioninRs				decimal(18,2)
							,@CollateralValueasonNPAdateinRs			decimal(18,2)
							--,@ExpiryBusinessRule						varchar(30)=''
							--,@Periodinmonth								int=0
						
						---------D2k System Common Columns		--
						,@Remark					VARCHAR(500)	= ''
						--,@MenuID					SMALLINT		= 0  change to Int
						,@MenuID                    Int=0
						,@OperationFlag				TINYINT			= 0
						,@AuthMode					CHAR(1)			= 'N'
						,@EffectiveFromTimeKey		INT		= 0
						,@EffectiveToTimeKey		INT		= 0
						,@TimeKey					INT		= 0
						,@CrModApBy					VARCHAR(20)		=''
						,@ScreenEntityId			INT				=null
						,@OldCollateralID           VARCHAR(20)	=''
						--,@TotCollateralsUCICCustAcc VARCHAR(5)	=''
						,@IfPercentagevalue_or_Absolutevalue decimal(18,2)=0
						,@Result					INT				=0 OUTPUT
						
						
AS
BEGIN
	SET NOCOUNT ON;
		PRINT 1
	
		SET DATEFORMAT DMY
	
		DECLARE 
						@AuthorisationStatus		varchar(5)			= NULL 
						,@CreatedBy					VARCHAR(20)		= NULL
						,@DateCreated				SMALLDATETIME	= NULL
						,@ModifiedBy				VARCHAR(20)		= NULL
						,@DateModified				SMALLDATETIME	= NULL
						,@ApprovedBy				VARCHAR(20)		= NULL
						,@DateApproved				SMALLDATETIME	= NULL
						,@ApprovedByFirstLevel		VARCHAR(20)		= NULL
						,@DateApprovedFirstLevel	SMALLDATETIME	= NULL
						,@ErrorHandle				int				= 0
						,@ExEntityKey				int				= 0  
						,@AccountEntityId            int				= 0  
						,@CustomerEntityId            int				= 0 
------------Added for Rejection Screen  29/06/2020   ----------

		DECLARE			@Uniq_EntryID			int	= 0
						,@RejectedBY			Varchar(50)	= NULL
						,@RemarkBy				Varchar(50)	= NULL
						,@RejectRemark			Varchar(200) = NULL
						,@ScreenName			Varchar(200) = NULL
						,@CollIDAutoGenerated   Int
						,@SecurityEntityID      bigint

				SET @ScreenName = 'Collateral'

	-------------------------------------------------------------

 SET @Timekey =(Select Timekey from SysDataMatrix where CurrentStatus='C') 

 SET @EffectiveFromTimeKey  = @TimeKey

	SET @EffectiveToTimeKey = 49999

	--SET @BankRPAlt_Key = (Select ISNULL(Max(BankRPAlt_Key),0)+1 from DimBankRP)
												
	PRINT 'A'
	

			DECLARE @AppAvail CHAR
					SET @AppAvail = (Select ParameterValue FROM SysSolutionParameter WHERE Parameter_Key=6)
				IF(@AppAvail='N')                         
					BEGIN
						SET @Result=-11
						RETURN @Result
					END

				IF @AccountID<>''
				    Select @AccountEntityId=AccountEntityId from advacbasicdetail
					Where CustomerACId=@AccountID


				IF @CustomerID<>''
					Select @CustomerEntityId=CustomerEntityId from CustomerBasicdetail
					Where CustomerId=@CustomerID
				



IF @OperationFlag=1  --- add
	BEGIN
	PRINT 1
		-----CHECK DUPLICATE
		IF EXISTS(				                
					SELECT  1 FROM Curdat.AdvSecurityDetail WHERE  CollateralID=@CollateralID AND ISNULL(AuthorisationStatus,'A')='A' 
					and EffectiveFromTimeKey <=@TimeKey AND EffectiveToTimeKey >=@TimeKey
					UNION
					SELECT  1 FROM DBO.AdvSecurityDetail_Mod  WHERE (EffectiveFromTimeKey <=@TimeKey AND EffectiveToTimeKey >=@TimeKey)
															 AND CollateralID=@CollateralID
															AND   ISNULL(AuthorisationStatus,'A') in('NP','MP','DP','RM') 
				)	
				BEGIN
				   PRINT 2
					SET @Result=-4
					RETURN @Result -- USER ALEADY EXISTS
				END
 
----------------------------------------
	END

	
	BEGIN TRY
	BEGIN TRANSACTION	
	----------------------------------------------------------------

	SET @CollIDAutoGenerated=0
	SET @SecurityEntityID=0

	--Select @SecurityEntityID=  MAX(ISNULL(SecurityEntityID,0)) from DBO.AdvSecurityDetail_Mod

	--				 IF (@SecurityEntityID IS NULL)

	--					SET   @SecurityEntityID=1

	--				ELSE 
	--				    SET    @SecurityEntityID=@SecurityEntityID+1


	-----------------------------------------------------------------------------------------

	IF @OperationFlag In(2) AND @AuthMode='Y'
	BEGIN

	SET @CollIDAutoGenerated=0
	SET @SecurityEntityID=0

	  Select @SecurityEntityID=  MAX(ISNULL(SecurityEntityID,0))+1  
      from(  
      select max(SecurityEntityID) SecurityEntityID from DBO.AdvSecurityDetail_Mod  
        UNION  
        select max(SecurityEntityID) SecurityEntityID from Curdat.AdvSecurityDetail  
        )A  
  
         IF (@SecurityEntityID IS NULL)  
       BEGIN
        SET   @SecurityEntityID=1
		END

		
		PRINT '@SecurityEntityIDStart'
		PRINT @SecurityEntityID
					--Select @CollIDAutoGenerated= MAX(Convert(Int,ISNULL(CollateralID,0))) From(
					--Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityDetail
					--UNION ALL
					--Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityDetail_Mod
					--UNION ALL
					--Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityValueDetail
					--UNION ALL
					-- Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityValueDetail_Mod
					-- UNION ALL
					-- Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.CollateralMgmtUpload_Mod
     --                  )X

					--IF (@CollIDAutoGenerated = 0)

					--	SET   @CollIDAutoGenerated=1000001

					--ELSE 
					--    SET    @CollIDAutoGenerated=Convert(Int,@CollIDAutoGenerated)+1

					--	Print '@CollIDAutoGenerated'
					--	Print @CollIDAutoGenerated
					 
					-- SET @CollateralID=Convert(Varchar(30),@CollIDAutoGenerated)

					-- 	Print '@CollateralID'
					--	Print @CollateralID
   END
-----------------------------------------------------------------------------

	PRINT 3	
		--np- new,  mp - modified, dp - delete, fm - further modifief, A- AUTHORISED , 'RM' - REMARK 
	IF @OperationFlag =1 AND @AuthMode ='Y' -- ADD
		BEGIN
				     PRINT 'Add'
					SET @CollIDAutoGenerated=0
					SET @SecurityEntityID=0
                   

					Select @CollIDAutoGenerated= MAX(Convert(Int,ISNULL(CollateralID,0))) From(
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityDetail
					UNION ALL
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityDetail_Mod
					UNION ALL
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityValueDetail
					UNION ALL
					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityValueDetail_Mod
					 UNION ALL
					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.CollateralMgmtUpload_Mod
                       )X

					IF (@CollIDAutoGenerated = 0)

						SET   @CollIDAutoGenerated=1000001

					ELSE 
					    SET    @CollIDAutoGenerated=Convert(Int,@CollIDAutoGenerated)+1

						Print '@CollIDAutoGenerated'
						Print @CollIDAutoGenerated
					 
					 SET @CollateralID=Convert(Varchar(30),@CollIDAutoGenerated)

					 	Print '@CollateralID'
						Print @CollateralID
					 SET @CreatedBy =@CrModApBy 
					 SET @DateCreated = GETDATE()
					 SET @AuthorisationStatus='NP'
					  Select @SecurityEntityID=  MAX(ISNULL(SecurityEntityID,0))+1  
							  from(  
							  select max(SecurityEntityID) SecurityEntityID from DBO.AdvSecurityDetail_Mod  
								UNION  
								select max(SecurityEntityID) SecurityEntityID from Curdat.AdvSecurityDetail  
								)A  
  
								 IF (@SecurityEntityID IS NULL)  
							   BEGIN
								SET   @SecurityEntityID=1
								END
					 
					 --SET @GLAlt_Key = (Select ISNULL(Max(GLAlt_Key),0)+1 from 
						--						(Select GLAlt_Key from DimGL
						--						 UNION 
						--						 Select GLAlt_Key from DimGL_Mod
						--						)A)
						PRINT '@SecurityEntityID'
						PRINT @SecurityEntityID

					 GOTO Collateral_Insert
					Collateral_Insert_Add:
			END


			ELSE IF(@OperationFlag = 2 OR @OperationFlag = 3) AND @AuthMode = 'Y' --EDIT AND DELETE
			BEGIN
				Print 4
				SET @CreatedBy= @CrModApBy
				SET @DateCreated = GETDATE()
				Set @Modifiedby=@CrModApBy   
				Set @DateModified =GETDATE() 

					PRINT 5

					IF @OperationFlag = 2
						BEGIN
							PRINT 'Edit'
							SET @AuthorisationStatus ='MP'
							SELECT  @SecurityEntityID=SecurityEntityID
							
					FROM DBO.AdvSecurityDetail_Mod 
					WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
							AND CollateralID =@CollateralID
							AND AuthorisationStatus IN('NP','MP','A','RM')
							
						END

					ELSE
						BEGIN
							PRINT 'DELETE'
							SET @AuthorisationStatus ='DP'
							
						END

						---FIND CREATED BY FROM MAIN TABLE
					SELECT  @CreatedBy		= CreatedBy
							,@DateCreated	= DateCreated 
					FROM Curdat.AdvSecurityDetail  
					WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
							AND CollateralID =@CollateralID

				---FIND CREATED BY FROM MAIN TABLE IN CASE OF DATA IS NOT AVAILABLE IN MAIN TABLE
				IF ISNULL(@CreatedBy,'')=''
				BEGIN
					PRINT 'NOT AVAILABLE IN MAIN'
					SELECT  @CreatedBy		= CreatedBy
							,@DateCreated	= DateCreated 
					FROM DBO.AdvSecurityDetail_Mod 
					WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
							AND CollateralID =@CollateralID
							AND AuthorisationStatus IN('NP','MP','A','RM')
															
				END
				ELSE ---IF DATA IS AVAILABLE IN MAIN TABLE
					BEGIN
					       Print 'AVAILABLE IN MAIN'
						----UPDATE FLAG IN MAIN TABLES AS MP
						UPDATE Curdat.AdvSecurityDetail
							SET AuthorisationStatus=@AuthorisationStatus
						WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
								AND CollateralID =@CollateralID

					END

					--UPDATE NP,MP  STATUS 
					IF @OperationFlag=2
					BEGIN	

						UPDATE DBO.AdvSecurityDetail_Mod
							SET AuthorisationStatus='FM'
							,ModifiedBy=@Modifiedby
							,DateModified=@DateModified
						WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
								AND CollateralID =@CollateralID
								AND AuthorisationStatus IN('NP','MP','RM')
					END

					GOTO Collateral_Insert
					Collateral_Insert_Edit_Delete:
				END

		ELSE IF @OperationFlag =3 AND @AuthMode ='N'
		BEGIN
		-- DELETE WITHOUT MAKER CHECKER
											
						SET @Modifiedby   = @CrModApBy 
						SET @DateModified = GETDATE() 

						UPDATE Curdat.AdvSecurityDetail SET
									ModifiedBy =@Modifiedby 
									,DateModified =@DateModified 
									,EffectiveToTimeKey =@EffectiveFromTimeKey-1
								WHERE (EffectiveFromTimeKey=EffectiveFromTimeKey AND EffectiveToTimeKey>=@TimeKey) AND CollateralID=@CollateralID
				

		end

----------------------------------------------------------------------------------
	ELSE IF @OperationFlag=21 AND @AuthMode ='Y' 
		BEGIN
				SET @ApprovedBy	   = @CrModApBy 
				SET @DateApproved  = GETDATE()

				UPDATE DBO.AdvSecurityDetail_Mod
					SET AuthorisationStatus='R'
					,ApprovedBy	 =@ApprovedBy
					,DateApproved=@DateApproved
					,EffectiveToTimeKey =@EffectiveFromTimeKey-1
				WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
						AND CollateralID =@CollateralID
						AND AuthorisationStatus in('NP','MP','DP','RM','1A')	


				IF EXISTS(SELECT 1 FROM Curdat.AdvSecurityDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@Timekey) AND CollateralID=@CollateralID)
				BEGIN
					UPDATE Curdat.AdvSecurityDetail
						SET AuthorisationStatus='A'
					WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
							AND CollateralID =@CollateralID
							AND AuthorisationStatus IN('MP','DP','RM') 	
				END
		END	
---------------------------------------------------------------------------------------------	
	ELSE IF @OperationFlag=17 AND @AuthMode ='Y' 
		BEGIN
				SET @ApprovedBy	   = @CrModApBy 
				SET @DateApproved  = GETDATE()

				UPDATE DBO.AdvSecurityDetail_Mod
					SET AuthorisationStatus='R'
					,ApprovedBy	 =@ApprovedBy
					,DateApproved=@DateApproved
					,EffectiveToTimeKey =@EffectiveFromTimeKey-1
				WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
						AND CollateralID =@CollateralID
						AND AuthorisationStatus in('NP','MP','DP','RM')	

---------------Added for Rejection Pop Up Screen  29/06/2020   ----------

		Print 'Sunil'

--		DECLARE @EntityKey as Int 
		--SELECT	@CreatedBy=CreatedBy,@DateCreated=DATECreated,@EntityKey=EntityKey
		--					 FROM DimGL_Mod 
		--						WHERE (EffectiveToTimeKey =@EffectiveFromTimeKey-1 )
		--							AND GLAlt_Key=@GLAlt_Key And ISNULL(AuthorisationStatus,'A')='R'
		
--	EXEC [AxisIntReversalDB].[RejectedEntryDtlsInsert]  @Uniq_EntryID = @EntityKey, @OperationFlag = @OperationFlag ,@AuthMode = @AuthMode ,@RejectedBY = @CrModApBy
--,@RemarkBy = @CreatedBy,@DateCreated=@DateCreated ,@RejectRemark = @Remark ,@ScreenName = @ScreenName
		

--------------------------------

				IF EXISTS(SELECT 1 FROM Curdat.AdvSecurityDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@Timekey) AND CollateralID=@CollateralID)
				BEGIN
					UPDATE Curdat.AdvSecurityDetail
						SET AuthorisationStatus='A'
					WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
							AND CollateralID =@CollateralID
							AND AuthorisationStatus IN('MP','DP','RM') 	
				END
		END	

	ELSE IF @OperationFlag=18
	BEGIN
		PRINT 18
		SET @ApprovedBy=@CrModApBy
		SET @DateApproved=GETDATE()
		UPDATE DBO.AdvSecurityDetail_Mod
		SET AuthorisationStatus='RM'
		WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
		AND AuthorisationStatus IN('NP','MP','DP','RM')
		AND CollateralID=@CollateralID

	END

     	ELSE IF @OperationFlag=16

		BEGIN

		SET @ApprovedBy	   = @CrModApBy 
		SET @DateApproved  = GETDATE()
		SET @ApprovedByFirstLevel	   = @CrModApBy 
		SET @DateApprovedFirstLevel  = GETDATE()
		PRINT 'Akshay11'
		PRINT '@CollateralID'
		PRINT @CollateralID
							
		UPDATE DBO.AdvSecurityDetail_Mod
						SET AuthorisationStatus ='1A'
							,ApprovedByFirstLevel=@ApprovedBy
							,DateApprovedFirstLevel=@DateApproved
							WHERE CollateralID=@CollateralID
							AND AuthorisationStatus in('NP','MP','DP','RM')
PRINT 'Akshay12'
         

		 UPDATE DBO.AdvSecurityValueDetail_Mod
						SET AuthorisationStatus ='1A'
							,ApprovedByFirstLevel=@ApprovedBy
							,DateApprovedFirstLevel=@DateApproved
							WHERE CollateralID=@CollateralID
							AND AuthorisationStatus in('NP','MP','DP','RM')



		END

	ELSE IF @OperationFlag=20 OR @AuthMode='N'
		BEGIN
			
			Print 'Authorise'
	-------set parameter for  maker checker disabled
			IF @AuthMode='N'
			BEGIN
				IF @OperationFlag=1
					BEGIN
						SET @CreatedBy =@CrModApBy
						SET @DateCreated =GETDATE()
					END
				ELSE
					BEGIN
						SET @ModifiedBy  =@CrModApBy
						SET @DateModified =GETDATE()
						SELECT	@CreatedBy=CreatedBy,@DateCreated=DATECreated
					 FROM Curdat.AdvSecurityDetail 
						WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey >=@TimeKey )
							AND CollateralID=@CollateralID
					
					SET @ApprovedBy = @CrModApBy			
					SET @DateApproved=GETDATE()
					END
			END	
			
	---set parameters and UPDATE mod table in case maker checker enabled
			IF @AuthMode='Y'
				BEGIN
				    Print 'B'
					DECLARE @DelStatus CHAR(2)
					DECLARE @CurrRecordFromTimeKey smallint=0

					Print 'C'
					SELECT @ExEntityKey= MAX(EntityKey) FROM DBO.AdvSecurityDetail_Mod 
						WHERE (EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey >=@Timekey) 
							AND CollateralID=@CollateralID
							AND AuthorisationStatus IN('NP','MP','DP','RM','1A')	

					SELECT	@DelStatus=AuthorisationStatus,@CreatedBy=CreatedBy,@DateCreated=DATECreated
						,@ModifiedBy=ModifiedBy, @DateModified=DateModified,@SecurityEntityID=SecurityEntityID,
						@ApprovedByFirstLevel=ApprovedByFirstLevel,@DateApprovedFirstLevel=DateApprovedFirstLevel
					 FROM DBO.AdvSecurityDetail_Mod
						WHERE EntityKey=@ExEntityKey
					
					SET @ApprovedBy = @CrModApBy			
					SET @DateApproved=GETDATE()
				
					
					DECLARE @CurEntityKey INT=0

					SELECT @ExEntityKey= MIN(EntityKey) FROM DBO.AdvSecurityDetail_Mod 
						WHERE (EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey >=@Timekey) 
							AND CollateralID=@CollateralID
							AND AuthorisationStatus IN('NP','MP','DP','RM','1A')	
				
					SELECT	@CurrRecordFromTimeKey=EffectiveFromTimeKey 
						 FROM DBO.AdvSecurityDetail_Mod
							WHERE EntityKey=@ExEntityKey

					UPDATE DBO.AdvSecurityDetail_Mod
						SET  EffectiveToTimeKey =@CurrRecordFromTimeKey-1
						WHERE (EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey >=@Timekey)
						AND CollateralID=@CollateralID
						AND AuthorisationStatus='A'	

		-------DELETE RECORD AUTHORISE
					IF @DelStatus='DP' 
					BEGIN	
						UPDATE DBO.AdvSecurityDetail_Mod
						SET AuthorisationStatus ='A'
							,ApprovedBy=@ApprovedBy
							,DateApproved=@DateApproved
							,EffectiveToTimeKey =@EffectiveFromTimeKey -1
						WHERE CollateralID=@CollateralID
							AND AuthorisationStatus in('NP','MP','DP','RM','1A')
						
						IF EXISTS(SELECT 1 FROM Curdat.AdvSecurityDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey) 
										AND CollateralID=@CollateralID)
						BEGIN
								UPDATE Curdat.AdvSecurityDetail
									SET AuthorisationStatus ='A'
										,ModifiedBy=@ModifiedBy
										,DateModified=@DateModified
										,ApprovedBy=@ApprovedBy
										,DateApproved=@DateApproved
										,EffectiveToTimeKey =@EffectiveFromTimeKey-1
									WHERE (EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey >=@Timekey)
											AND CollateralID=@CollateralID

								
						END
					END -- END OF DELETE BLOCK

					ELSE  -- OTHER THAN DELETE STATUS
					BEGIN
					      Print '@DelStatus'
						  Print  @DelStatus
						   Print '@AuthMode'
						  Print  @AuthMode

							UPDATE DBO.AdvSecurityDetail_Mod
								SET AuthorisationStatus ='A'
									,ApprovedBy=@ApprovedBy
									,DateApproved=@DateApproved
								WHERE CollateralID=@CollateralID				
									AND AuthorisationStatus in('NP','MP','RM','1A')

			

									
					END		
				END



		IF @DelStatus <>'DP' OR @AuthMode ='N'
				BEGIN
				     PRINT 'Check'
						DECLARE @IsAvailable CHAR(1)='N'
						,@IsSCD2 CHAR(1)='N'
								SET @AuthorisationStatus='A' --changedby siddhant 5/7/2020

						IF EXISTS(SELECT 1 FROM Curdat.AdvSecurityDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)
									 AND CollateralID=@CollateralID)
							BEGIN
								SET @IsAvailable='Y'
								--SET @AuthorisationStatus='A'


								IF EXISTS(SELECT 1 FROM Curdat.AdvSecurityDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey) 
												AND EffectiveFromTimeKey=@TimeKey AND CollateralID=@CollateralID)
									BEGIN
											PRINT 'BBBB'
										UPDATE Curdat.AdvSecurityDetail SET
												 RefSystemAcId							= @AccountID										
												 ,UCICID							= @UCICID						
												 ,RefCustomerId						= @CustomerID					
												 ,CustomerName						= @CustomerName					
												 ,TaggingAlt_Key					= @TaggingAlt_Key				
												 ,DistributionAlt_Key				= @DistributionAlt_Key			
												 ,CollateralID						= @CollateralID					
												 --,CollateralCode					= @CollateralCode				
												 ,SecurityAlt_Key= @CollateralTypeAlt_Key			
												 ,CollateralSubTypeAlt_Key			= @CollateralSubTypeAlt_Key		
												 ,OwnerTypeAlt_Key		= @CollateralOwnerTypeAlt_Key	
												 ,CollateralOwnerShipTypeAlt_Key	= @CollateralOwnerShipTypeAlt_Key
												 ,SecurityChargeTypeAlt_Key					= @ChargeTypeAlt_Key				
												 ,ChargeNatureAlt_Key				= @ChargeNatureAlt_Key			
												 ,ShareAvailabletoBankAlt_Key		= @ShareAvailabletoBankAlt_Key	
												 ,CollateralShareamount				= @CollateralShareamount
												 --,TotalCollateralvalueatcustomerlevel	= @TotalCollateralvalueatcustomerlevel	
												 ,Security_RefNo =@OldCollateralID 
												 --,TotCollateralsUCICCustAcc=@TotCollateralsUCICCustAcc
												 ,IfPercentagevalue_or_Absolutevalue=@IfPercentagevalue_or_Absolutevalue
												 ,ChangeField=@ChangeField
												 ,CollateralValueatSanctioninRs=@CollateralValueatSanctioninRs
												,CollateralValueasonNPAdateinRs=@CollateralValueasonNPAdateinRs
												--,ExpiryBusinessRule=@ExpiryBusinessRule
												--,Periodinmonth=@Periodinmonth
												,@AccountEntityId=AccountEntityId
												,@CustomerEntityId=CustomerEntityId
												,ApprovedByFirstLevel=@ApprovedByFirstLevel
												,DateApprovedFirstLevel=@DateApprovedFirstLevel
												,ModifiedBy					= @ModifiedBy
												,DateModified				= @DateModified
												,ApprovedBy					= CASE WHEN @AuthMode ='Y' THEN @ApprovedBy ELSE NULL END
												,DateApproved				= CASE WHEN @AuthMode ='Y' THEN @DateApproved ELSE NULL END
												,AuthorisationStatus		= CASE WHEN @AuthMode ='Y' THEN  'A' ELSE NULL END
												
											 WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey) 
												AND EffectiveFromTimeKey=@EffectiveFromTimeKey AND CollateralID=@CollateralID
									END	

									ELSE
										BEGIN
											SET @IsSCD2='Y'
										END
								END

								IF @IsAvailable='N' OR @IsSCD2='Y'
									BEGIN
									PRINT 'Insert into Main Table'
									PRINT '@ExEntityKey'
									PRINT @ExEntityKey
									PRINT '@SecurityEntityID'
									PRINT @SecurityEntityID
										INSERT INTO Curdat.AdvSecurityDetail
												(
												     EntityKey,
													  RefSystemAcId						
													  ,UCICID						
													  ,RefCustomerId					
													  ,CustomerName					
													  ,TaggingAlt_Key				
													  ,DistributionAlt_Key			
													  ,CollateralID					
													  --,CollateralCode				
													  ,SecurityAlt_Key	
													  ,SecurityEntityID
													  ,CollateralSubTypeAlt_Key		
													  ,OwnerTypeAlt_Key	
													  ,CollateralOwnerShipTypeAlt_Key
													  ,SecurityChargeTypeAlt_Key				
													  ,ChargeNatureAlt_Key			
													  ,ShareAvailabletoBankAlt_Key	
													  ,CollateralShareamount
													  --,TotalCollateralvalueatcustomerlevel	
													  ,Security_RefNo
													  --,TotCollateralsUCICCustAcc
													  ,IfPercentagevalue_or_Absolutevalue
													,AuthorisationStatus
													,EffectiveFromTimeKey
													,EffectiveToTimeKey
													,CreatedBy 
													,DateCreated
													,ModifiedBy
													,DateModified
													,ApprovedBy
													,DateApproved
													,ChangeField
													,ApprovedByFirstLevel
													,DateApprovedFirstLevel
													,CollateralValueatSanctioninRs
													,CollateralValueasonNPAdateinRs
													--,ExpiryBusinessRule
													--,Periodinmonth
													,AccountEntityId
												    ,CustomerEntityId
												)

										SELECT        @ExEntityKey
													  ,@AccountID						
													 ,@UCICID						
													 ,@CustomerID					
													 ,@CustomerName					
													 ,@TaggingAlt_Key				
													 ,@DistributionAlt_Key			
													 ,@CollateralID					
													 --,@CollateralCode				
													 ,@CollateralTypeAlt_Key
													 ,@SecurityEntityID
													 ,@CollateralSubTypeAlt_Key		
													 ,@CollateralOwnerTypeAlt_Key	
													 ,@CollateralOwnerShipTypeAlt_Key
													 ,@ChargeTypeAlt_Key				
													 ,@ChargeNatureAlt_Key			
													 ,@ShareAvailabletoBankAlt_Key	
													 ,@CollateralShareamount
													 --,@TotalCollateralvalueatcustomerlevel	
													 ,@OldCollateralID
													  --,@TotCollateralsUCICCustAcc
													  ,@IfPercentagevalue_or_Absolutevalue
													,CASE WHEN @AUTHMODE= 'Y' THEN   TRIM(@AuthorisationStatus) ELSE NULL END
													,@EffectiveFromTimeKey
													,@EffectiveToTimeKey
													,@CreatedBy 
													,@DateCreated
													,CASE WHEN @AuthMode='Y' OR @IsAvailable='Y' THEN @ModifiedBy  ELSE NULL END
													,CASE WHEN @AuthMode='Y' OR @IsAvailable='Y' THEN @DateModified  ELSE NULL END
													,CASE WHEN @AUTHMODE= 'Y' THEN    @ApprovedBy ELSE NULL END
													,CASE WHEN @AUTHMODE= 'Y' THEN    @DateApproved  ELSE NULL END
													,@ChangeField
													,@ApprovedByFirstLevel
													,@DateApprovedFirstLevel
													,@CollateralValueatSanctioninRs		
													,@CollateralValueasonNPAdateinRs	
													--,@ExpiryBusinessRule			        
													--,@Periodinmonth	
													,@AccountEntityId
												    ,@CustomerEntityId


												
	
										
									END

									---Adding SecurityValueDetail
   DECLARE @IsAvailableValue CHAR(1)='N' 
 IF EXISTS(SELECT 1 FROM Curdat.AdvSecurityValueDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)  
          AND CollateralID=@CollateralID)  
       BEGIN  
        SET @IsAvailableValue='Y'  
        --SET @AuthorisationStatus='A'  
  
  PRINT 'ValueStart'
 IF EXISTS(SELECT 1 FROM DBO.AdvSecurityValueDetail_MOD WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)   
            AND EffectiveFromTimeKey=@TimeKey AND CollateralID=@CollateralID And AuthorisationStatus in ('MP','1A') )  
         BEGIN  
 PRINT 'ValueStart1'            
          	UPDATE A SET  
                         
             A.ValuationDate       =  B.ValuationDate        
             ,A.CurrentValue      = B.CurrentValue       
             ,A.ValuationExpiryDate      = B.ValuationExpiryDate 
			 ,A.ModifiedBy     = @ModifiedBy  
            ,A.DateModified    = @DateModified
	FROM  Curdat.AdvSecurityValueDetail A  INNER JOIN
	(
	Select ValuationDate,CurrentValue,ValuationExpiryDate,CollateralID
	FROM DBO.AdvSecurityValueDetail_MOD 
	 WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)  
	 AND CollateralID=@CollateralID
	 
	 ) B  On A.CollateralID=B.CollateralID
Where (A.EffectiveFromTimeKey<=@TimeKey AND A.EffectiveToTimeKey>=@TimeKey)
 AND A.CollateralID=@CollateralID

 Update  Curdat.AdvSecurityValueDetail
 SET AuthorisationStatus='A'
 Where CollateralID=@CollateralID AND AuthorisationStatus in ('MP','NP','1A')

  Update  DBO.AdvSecurityValueDetail_MOD 
 SET AuthorisationStatus='A'
 Where CollateralID=@CollateralID AND AuthorisationStatus in ('MP','NP''1A')
		
 END   
         ELSE  
          BEGIN  
     SET @IsSCD2='Y'  
          END  
        END  
  
        IF @IsAvailableValue='N' OR @IsSCD2='Y'  
         BEGIN  
         PRINT 'Insert into Valuedetail Table'  
         PRINT '@ExEntityKey'  
         PRINT @ExEntityKey  
		 
		

		  
          insert into Curdat.AdvSecurityValueDetail   
     (    
     CollateralID    
     ,SecurityEntityID    
     ,ValuationDate    
     ,CurrentValue    
     ,ValuationExpiryDate    
     ,ExpiryBusinessRule    
     ,Periodinmonth    
         
     ,EffectiveFromTimeKey    
     ,EffectiveToTimeKey    
      ,AuthorisationStatus   
     ,ApprovedBy    
     ,DateApproved)    
    
   Select   CollateralID    
             
      ,SecurityEntityID    
            ,ValuationDate     
           ,CurrentValue     
     ,ValuationExpiryDate       
     ,ExpiryBusinessRule          
     ,Periodinmonth     
               
     ,EffectiveFromTimeKey     
     ,EffectiveToTimeKey     
       ,'A'      
      ,@ApprovedBy       
      ,GETDATE()    
  from DBO.AdvSecurityValueDetail_MOD 
  WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)   
            AND EffectiveFromTimeKey=@TimeKey AND CollateralID=@CollateralID
			AND AuthorisationStatus in('NP','MP','1A')      
  
  Update  Curdat.AdvSecurityValueDetail
 SET AuthorisationStatus='A'
 Where CollateralID=@CollateralID AND AuthorisationStatus in ('MP','NP','1A')

  Update  DBO.AdvSecurityValueDetail_MOD 
 SET AuthorisationStatus='A'
 Where CollateralID=@CollateralID AND AuthorisationStatus in ('MP','NP','1A') 
              
    Declare @collateralCount Int

		 SELECT @collateralCount=Count(*) FROM Curdat.AdvSecurityValueDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)   
            AND EffectiveFromTimeKey=@TimeKey AND CollateralID=@CollateralID

			IF @collateralCount>2
			   BEGIN
			       
				 Update Curdat.AdvSecurityValueDetail     
				 SET EffectiveFromTimeKey=@Timekey-1,      
				 EffectiveToTimeKey=@Timekey-1
				 Where CollateralID=@CollateralID  
			      AND  SecurityEntityID IN(Select MIN(SecurityEntityID)
			      FROM Curdat.AdvSecurityValueDetail WHERE (EffectiveFromTimeKey<=@TimeKey AND EffectiveToTimeKey>=@TimeKey)   
				  AND EffectiveFromTimeKey=@TimeKey AND CollateralID=@CollateralID)

			   END
            
         END  
									 IF (@CollateralOwnerShipTypeAlt_Key=1)
											BEGIN 
												Update CollateralOtherOwner
												SET EffectiveToTimeKey=EffectiveFromTimeKey-1
												Where   CollateralID=@CollateralID  and EffectiveFromTimeKey=@EffectiveFromTimeKey and EffectiveToTimeKey=@EffectiveToTimeKey
											END

-----------------Added on 13-03-2021
	------------------------------------------------------
		--declare 
		----@CollateralID								int=0		
		----@CollateralValueatSanctioninRs				decimal(18,2)
		----,@CollateralValueasonNPAdateinRs			decimal(18,2)
		--@CollateralValueatthetimeoflastreviewinRs	decimal(18,2)
		--,@ValuationSourceNameAlt_Key				int=0
		--,@SourceName								varchar(30)
		--,@ValuationDate								Date
		--,@LatestCollateralValueinRs					decimal(18,2)
		--,@ExpiryBusinessRule						varchar(30)=''
		--,@Periodinmonth								int=0
		--,@ValueExpirationDate						Date
								
		--EXEC CollateralValueInsert  @CollateralID=@CollateralID
		--							,@CollateralValueatSanctioninRs=@CollateralValueatSanctioninRs
		--							,@CollateralValueasonNPAdateinRs=@CollateralValueasonNPAdateinRs
		--							,@CollateralValueatthetimeoflastreviewinRs=@CollateralValueatthetimeoflastreviewinRs
		--							--,@ValuationSourceNameAlt_Key=@ValuationSourceNameAlt_Key
		--							--,@SourceName=@SourceName
		--							,@ValuationDate=@ValuationDate
		--							,@LatestCollateralValueinRs=@LatestCollateralValueinRs
		--							,@ExpiryBusinessRule=@ExpiryBusinessRule
		--							,@Periodinmonth=@Periodinmonth
		--							,@ValueExpirationDate=@ValueExpirationDate
		--							,@AuthorisationStatus=@AuthorisationStatus
		--							,@EffectiveFromTimeKey=@EffectiveFromTimeKey
		--							,@EffectiveToTimeKey=@EffectiveToTimeKey
		--							,@CreatedBy	=@CreatedBy	
		--							 ,@DateCreated	=@DateCreated
		--							 ,@ModifiedBy=@ModifiedBy	
		--							 ,@DateModified	=@DateModified
		--							 ,@ApprovedBy=@ApprovedBy	
		--							 ,@DateApproved	=@DateApproved

			Declare
			--@CollateralID	int	=0
			@CustomeroftheBankAlt_Key	int=0
			--,@CollateralID	varchar(16)=''
			--,@CustomerID	varchar(50)=''
			,@OtherOwnerName	varchar(50)=''
			,@PAN	varchar(10)=''
			,@OtherOwnerRelationshipAlt_Key	int=0
			,@IfRelationselectAlt_Key	int=0
			,@AddressType	varchar(200)=''
			,@Category	varchar(200)=''
			,@AddressLine1	varchar(200)=''
			,@AddressLine2	varchar(200)=''
			,@AddressLine3	varchar(200)=''
			,@City	varchar(200)=''
			,@PinCode	varchar(6)=''
			,@Country	varchar(100)=''
			,@State	varchar(100)=''
			,@District	varchar	(100)=''
			,@STDCodeO	varchar	(100)=''
			,@PhoneNumberO	varchar(10)=''
			,@STDCodeR	varchar(100)=''
			,@PhoneNumberR	varchar(10)=''
			,@FaxNumber	varchar(20)=''
			,@MobileNO	varchar(15)=''

			Exec CollateralOwnerInsert
						@CollateralID=@CollateralID								
						,@CustomeroftheBankAlt_Key=@CustomeroftheBankAlt_Key
						--,@AccountID=@AccountID
						,@CustomerID=@CustomerID
						,@OtherOwnerName=@OtherOwnerName
						,@PAN=@PAN
						,@OtherOwnerRelationshipAlt_Key=@OtherOwnerRelationshipAlt_Key
						,@IfRelationselectAlt_Key=@IfRelationselectAlt_Key
						--,@AddressType=@AddressType
						--,@Category=@Category
						--,@AddressLine1=@AddressLine1
						--,@AddressLine2=@AddressLine2
						--,@AddressLine3=@AddressLine3
						--,@City=@City
						--,@PinCode=@PinCode
						--,@Country=@Country
						--,@State=@State
						--,@District=@District
						--,@STDCodeO=@STDCodeO
						--,@PhoneNumberO=@PhoneNumberO
						--,@STDCodeR=@STDCodeR
						--,@PhoneNumberR=@PhoneNumberR
						--,@FaxNumber=@FaxNumber
						--,@MobileNO=@MobileNO
						,@AuthorisationStatus=@AuthorisationStatus
						,@EffectiveFromTimeKey=@EffectiveFromTimeKey	
						,@EffectiveToTimeKey=@EffectiveToTimeKey	
						,@CreatedBy=@CreatedBy				
						,@DateCreated=@DateCreated			
						,@ModifiedBy=@ModifiedBy			
						,@DateModified=@DateModified			
						,@ApprovedBy=@ApprovedBy			
						,@DateApproved=@DateApproved	
						
						
					exec CollateralOwnerAddressInsert
					@CollateralID=@CollateralID	
					,@AddressType=@AddressType
						,@Category=@Category
						,@AddressLine1=@AddressLine1
						,@AddressLine2=@AddressLine2
						,@AddressLine3=@AddressLine3
						,@City=@City
						,@PinCode=@PinCode
						,@Country=@Country
						,@State=@State
						,@District=@District
						,@STDCodeO=@STDCodeO
						,@PhoneNumberO=@PhoneNumberO
						,@STDCodeR=@STDCodeR
						,@PhoneNumberR=@PhoneNumberR
						,@FaxNumber=@FaxNumber
						,@MobileNO=@MobileNO
						,@AuthorisationStatus=@AuthorisationStatus
						,@EffectiveFromTimeKey=@EffectiveFromTimeKey	
						,@EffectiveToTimeKey=@EffectiveToTimeKey	
						,@CreatedBy=@CreatedBy				
						,@DateCreated=@DateCreated			
						,@ModifiedBy=@ModifiedBy			
						,@DateModified=@DateModified			
						,@ApprovedBy=@ApprovedBy			
						,@DateApproved=@DateApproved			
						
		




----------------------------------------------------------------------------------------------------

									IF @IsSCD2='Y' 
								BEGIN
								UPDATE Curdat.AdvSecurityDetail SET
										EffectiveToTimeKey=@EffectiveFromTimeKey-1
										,AuthorisationStatus =CASE WHEN @AUTHMODE='Y' THEN  'A' ELSE NULL END
									WHERE (EffectiveFromTimeKey=EffectiveFromTimeKey AND EffectiveToTimeKey>=@TimeKey) AND CollateralID=@CollateralID
											AND EffectiveFromTimekey<@EffectiveFromTimeKey
								END
							END

		IF @AUTHMODE='N'
			BEGIN
					SET @AuthorisationStatus='A'
					GOTO Collateral_Insert
					HistoryRecordInUp:
			END						



		END 

		

PRINT 6
SET @ErrorHandle=1

Collateral_Insert:
       
IF @ErrorHandle=0
	BEGIN
	            Print 'Rasika'
	            PRINT '@SecurityEntityIDSac'
						PRINT @SecurityEntityID
				
			INSERT INTO DBO.AdvSecurityDetail_Mod  
											( 
												 RefSystemAcId						
												 ,UCICID						
												 ,RefCustomerId					
												 ,CustomerName					
												 ,TaggingAlt_Key				
												 ,DistributionAlt_Key			
												 ,CollateralID					
												 --,CollateralCode				
												 ,SecurityAlt_Key	
												 ,SecurityEntityID

												 ,CollateralSubTypeAlt_Key		
												 ,OwnerTypeAlt_Key	
												 ,CollateralOwnerShipTypeAlt_Key
												 ,SecurityChargeTypeAlt_Key				
												 ,ChargeNatureAlt_Key			
												 ,ShareAvailabletoBankAlt_Key	
												 ,CollateralShareamount	
												 --,TotalCollateralvalueatcustomerlevel	
												 ,Security_RefNo
												 --,TotCollateralsUCICCustAcc
												 ,IfPercentagevalue_or_Absolutevalue
												,AuthorisationStatus	
												,EffectiveFromTimeKey
												,EffectiveToTimeKey
												,CreatedBy
												,DateCreated
												,ModifiedBy
												,DateModified
												,ApprovedBy
												,DateApproved
												,ChangeField
												,CollateralValueatSanctioninRs
												,CollateralValueasonNPAdateinRs
												--,ExpiryBusinessRule
												--,Periodinmonth	
												,AccountEntityId
												,CustomerEntityId  
											)
								VALUES
											( 
													  @AccountID						
													 ,@UCICID						
													 ,@CustomerID					
													 ,@CustomerName					
													 ,@TaggingAlt_Key				
													 ,@DistributionAlt_Key			
													 ,@CollateralID					
													 --,@CollateralCode				
													 ,@CollateralTypeAlt_Key
													 ,@SecurityEntityID			
													 ,@CollateralSubTypeAlt_Key		
													 ,@CollateralOwnerTypeAlt_Key	
													 ,@CollateralOwnerShipTypeAlt_Key
													 ,@ChargeTypeAlt_Key				
													 ,@ChargeNatureAlt_Key			
													 ,@ShareAvailabletoBankAlt_Key	
													 ,@CollateralShareamount
													 --,@TotalCollateralvalueatcustomerlevel	
													 ,@OldCollateralID
												     --,@TotCollateralsUCICCustAcc
													 ,@IfPercentagevalue_or_Absolutevalue
													,@AuthorisationStatus
													,@EffectiveFromTimeKey
													,@EffectiveToTimeKey 
													,@CreatedBy
													,@DateCreated
													,CASE WHEN @AuthMode='Y' OR @IsAvailable='Y' THEN @ModifiedBy ELSE NULL END
													,CASE WHEN @AuthMode='Y' OR @IsAvailable='Y' THEN @DateModified ELSE NULL END
													,CASE WHEN @AuthMode='Y' THEN @ApprovedBy    ELSE NULL END
													,CASE WHEN @AuthMode='Y' THEN @DateApproved  ELSE NULL END
													,@ChangeField
													,@CollateralValueatSanctioninRs		
													,@CollateralValueasonNPAdateinRs	
													--,@ExpiryBusinessRule			        
													--,@Periodinmonth	
													,@AccountEntityId
												    ,@CustomerEntityId
											)
	
	

		         IF @OperationFlag =1 AND @AUTHMODE='Y'
					BEGIN
						PRINT 3
						GOTO Collateral_Insert_Add
					END
				ELSE IF (@OperationFlag =2 OR @OperationFlag =3)AND @AUTHMODE='Y'
					BEGIN
						GOTO Collateral_Insert_Edit_Delete
					END
					

				
	END



	-------------------
PRINT 7
		COMMIT TRANSACTION

		--SELECT @D2Ktimestamp=CAST(D2Ktimestamp AS INT) FROM DimGL WHERE (EffectiveFromTimeKey=EffectiveFromTimeKey AND EffectiveToTimeKey>=@TimeKey) 
		--															AND GLAlt_Key=@GLAlt_Key

		IF @OperationFlag =3
			BEGIN
				SET @Result=0
			END
		ELSE
			BEGIN
				SET @Result=1
			END
END TRY
BEGIN CATCH
	ROLLBACK TRAN

	INSERT INTO dbo.Error_Log
				SELECT ERROR_LINE() as ErrorLine,ERROR_MESSAGE()ErrorMessage,ERROR_NUMBER()ErrorNumber
				,ERROR_PROCEDURE()ErrorProcedure,ERROR_SEVERITY()ErrorSeverity,ERROR_STATE()ErrorState
				,GETDATE()

	SELECT ERROR_MESSAGE()
	RETURN -1
   
END CATCH
---------
END
GO