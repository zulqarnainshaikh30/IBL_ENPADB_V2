SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO

--USE YES_MISDB
CREATE PROCEDURE  [dbo].[ColletralDetailUploadDataInUp]
	@Timekey INT,
	@UserLoginID VARCHAR(100),
	@OperationFlag INT,
	@MenuId INT,
	@AuthMode	CHAR(1),
	@filepath VARCHAR(MAX),
	@EffectiveFromTimeKey INT,
	@EffectiveToTimeKey	INT,
    @Result		INT=0 OUTPUT,
	@UniqueUploadID INT
	--@Authlevel varchar(5)

AS

--DECLARE @Timekey INT=24928,
--	@UserLoginID VARCHAR(100)='FNAOPERATOR',
--	@OperationFlag INT=1,
--	@MenuId INT=163,
--	@AuthMode	CHAR(1)='N',
--	@filepath VARCHAR(MAX)='',
--	@EffectiveFromTimeKey INT=24928,
--	@EffectiveToTimeKey	INT=49999,
--    @Result		INT=0 ,
--	@UniqueUploadID INT=41
BEGIN
SET DATEFORMAT DMY
	SET NOCOUNT ON;
	Declare @CollIDAutoGenerated   Int
    Declare @CollateralID		   varchar(30)=''
   --DECLARE @Timekey INT
   --SET @Timekey=(SELECT MAX(TIMEKEY) FROM dbo.SysProcessingCycle
			--	WHERE ProcessType='Quarterly')

			Set @Timekey=(
			select CAST(B.timekey as int)from SysDataMatrix A
			Inner Join SysDayMatrix B ON A.TimeKey=B.TimeKey
			 where A.CurrentStatus='C'
			 )

	PRINT @TIMEKEY

	SET @EffectiveFromTimeKey=@TimeKey
	SET @EffectiveToTimeKey=49999


--Declare @Year INT
--Declare @FromDate Varchar(10)
--Declare @ToDate Varchar(10)
--SET @Year=DATEPART(YEAR,Getdate())

--SET @FromDate=Convert(Varchar(4),(@Year-1))+'-04-01' 
--SET @ToDate=Convert(Varchar(4),(@Year))+'-03-31' 


	DECLARE @FilePathUpload	VARCHAR(100)
				   SET @FilePathUpload=@UserLoginId+'_'+@filepath
					PRINT '@FilePathUpload'
					PRINT @FilePathUpload


		BEGIN TRY

		--BEGIN TRAN
		
IF (@MenuId=24736)
BEGIN
 --Set @FilePathUpload='mismaker_CollateralUpload_3.xlsx'

	IF (@OperationFlag=1)

	BEGIN

		IF NOT (EXISTS (SELECT 1 FROM CollateralStockStatementUpload_stg  where filname=@FilePathUpload))

							BEGIN
									 --Rollback tran
									SET @Result=-8

								RETURN @Result
							END
			
                   Print 'Sachin'
				   
		IF EXISTS(SELECT 1 FROM CollateralStockStatementUpload_stg WHERE filname=@FilePathUpload)
		BEGIN
		
		INSERT INTO ExcelUploadHistory
	(
		UploadedBy	
		,DateofUpload	
		,AuthorisationStatus	
		--,Action	
		,UploadType
		,EffectiveFromTimeKey	
		,EffectiveToTimeKey	
		,CreatedBy	
		,DateCreated	
		
	)

	SELECT @UserLoginID
		   ,GETDATE()
		   ,'NP'
		   --,'NP'
		   ,'Colletral Detail Upload'
		   ,@EffectiveFromTimeKey
		   ,@EffectiveToTimeKey
		   ,@UserLoginID
		   ,GETDATE()

		   --sp
			   PRINT @@ROWCOUNT

		   DECLARE @ExcelUploadId INT
	SET 	@ExcelUploadId=(
	SELECT MAX(UniqueUploadID) FROM  ExcelUploadHistory
	)
		
			Insert into UploadStatus (FileNames,UploadedBy,UploadDateTime,UploadType)
		Values(@filepath,@UserLoginID ,GETDATE(),'Colletral Detail Upload')


		SET @CollIDAutoGenerated=0
				
         
					Select @CollIDAutoGenerated= MAX(Convert(Int,ISNULL(CollateralID,0))) From(
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityDetail
					UNION ALL
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityDetail_Mod
					UNION ALL
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityValueDetail
					UNION ALL
					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityValueDetail_Mod
					 UNION ALL
					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.CollateralDetailUpload_Mod
					 )X

					 PRINT '@CollIDAutoGenerated'
					 PRINT @CollIDAutoGenerated

					IF (@CollIDAutoGenerated =0)

						SET   @CollIDAutoGenerated=1000001

					ELSE 
					   -- SET    @CollIDAutoGenerated=Convert(Int,@CollIDAutoGenerated)

						Print '@CollIDAutoGenerated'
						Print @CollIDAutoGenerated
					 
					 SET @CollateralID=Convert(Varchar(30),@CollIDAutoGenerated)

					 	Print '@CollateralID'
						Print @CollateralID

					 PRINT '@ExcelUploadId'
					 PRINT @ExcelUploadId

					 Print 'SachinModInsert'
					 --PRINT '@CollateralID'
					 --PRINT @CollateralID
					 --PRINT '@ExcelUploadId'
					 --PRINT @ExcelUploadId
					 --PRINT '@FilePathUpload'
					 --PRINT @FilePathUpload
	 SET dateformat DMY

		INSERT INTO [CollateralDetailUpload_Mod]
		(
						SrNo,
						UploadID,
						CollateralID,
						AccountID,
						CollateralType,
						CollateralSubType,
						ChargeType,
						ChargeNature,
						ValuationDate,
						CurrCollateralValue,
						ValSource_ExpBusinessRule,
						CreatedBy,
						DateCreated,
						AuthorisationStatus,
						EffectiveFromTimeKey,
						EffectiveToTimeKey
						
		)
		
		SELECT
			SrNo,
			@ExcelUploadId,
			 @CollIDAutoGenerated+Row_Number()Over(order by (Select 1)) ,
		    AccountID,
			CollateralType,
			CollateralSubType,
			ChargeType,
			ChargeNature,
			Case When ValuationDate<>'' Then  Convert(date,ValuationDate) Else NULL END as ValuationDate,
			 Case When CurrentCollateralValueinRs<>'' Then Convert(decimal(16,2),ISNULL(CurrentCollateralValueinRs,'0')) Else 0 End,
			CollateralSubType,
		    @UserLoginID,
			GETDATE(),
			'NP',
			@Timekey,
			49999
			
		FROM CollateralStockStatementUpload_stg
		where filname=@FilePathUpload

		                                                                                                                                   



		
		---DELETE FROM STAGING DATA Sachin
		 --DELETE FROM CollateralStockStatementUpload_stg
		 --WHERE filname=@FilePathUpload


		 --RETURN @ExcelUploadId

		  

END
	
	END

	IF (@OperationFlag=16)----AUTHORIZE

	BEGIN
	UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='1A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

				 UPDATE 
		   ExcelUploadHistory
		   SET AuthorisationStatus='1A'
		  ,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
		   where UniqueUploadID=@UniqueUploadID
		   AND UploadType='Colletral Detail Upload'

				--	UPDATE
				--ExcelUploadHistory
				--SET AuthorisationStatus='A',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				--WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				--AND UniqueUploadID=@UniqueUploadID
				--AND UploadType='Colletral Detail Upload'
	END
--------------------------------------------

	IF (@OperationFlag=20)----AUTHORIZE

	BEGIN
		
		UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

			UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			WHERE UploadId=@UniqueUploadID
			
			--Update  A
			--Set A.EffectiveToTimeKey=A.EffectiveFromTimeKey-1
			--from [CollateralDetailUpload] A
			--inner join [CollateralDetailUpload_Mod] B
			--ON A.AccountID=B.AccountID
			--AND B.EffectiveFromTimeKey <=@Timekey
			--AND B.EffectiveToTimeKey >=@Timekey
			--Where B.UploadId=@UniqueUploadID
			--AND A.EffectiveToTimeKey >=49999

		
		Declare @SecurityEntityID      Bigint

	    Declare @ENTITYKEY      Bigint

		 Select @SecurityEntityID=  MAX(ISNULL(SecurityEntityID,0)) from [Curdat].[AdvSecurityDetail]

					 IF (@SecurityEntityID IS NULL)
					    Begin 
							SET   @SecurityEntityID=1
						END
					ELSE 
					    SET @SecurityEntityID=@SecurityEntityID+1

			--Select @ENTITYKEY=  MAX(ISNULL(ENTITYKEY,0)) from [Curdat].[AdvSecurityDetail]

			--		 IF (@ENTITYKEY IS NULL)
			--		    Begin 
			--				SET   @ENTITYKEY=1
			--			END
			--		ELSE 
			--		    SET    @ENTITYKEY=@ENTITYKEY+1
						
			
						
						PRINT '@SecurityEntityID'
					    PRINT @SecurityEntityID

						 SET dateformat DMY

			INSERT INTO [Curdat].[AdvSecurityDetail]
		(
		   ENTITYKEY,
			CollateralID,
			
				AccountID,
				CollateralType,
				
				CollateralSubTypeAlt_Key,
				ChargeType,
				ChargeNature,
			SecurityEntityID,
			
				 AuthorisationStatus,
		     EffectiveFromTimeKey,
			EffectiveToTimeKey,
			CreatedBy,
			DateCreated,
			ModifiedBy,
			DateModified,
			ApprovedBy,
			DateApproved,
			EntryType,
			SecurityType
		   																					
						
		)
			SELECT 
			@ENTITYKEY+Row_Number()Over(order by (Select 1)) as ENTITYKEY,
			CollateralID,
		    AccountID,
			C.CollateralTypeAltKey,	
			D.CollateralSubTypeAltKey,
			E.CollateralChargeTypeAltKey,
			F.SecurityChargeTypeAlt_Key,
				@SecurityEntityID+Row_Number()Over(order by (Select 1)),
				
					A.AuthorisationStatus,
					@Timekey,
					49999,
					A.CreatedBy,
					A.DateCreated,
					A.ModifiedBy,
					A.DateModified,
					@UserLoginID,
					Getdate(),
					'Corporate',
					'C'
					
					
			FROM [CollateralDetailUpload_Mod] A
			LEFT JOIN DimCollateralType C ON A.CollateralType=C.CollateralTypeDescription
			LEFT JOIN DimCollateralSubType D ON A.CollateralSubType=D.CollateralSubTypeDescription
	
			Left Join DimCollateralChargeType E ON A.ChargeType=E.CollChargeDescription
			Left Join DimSecurityChargeType F ON A.ChargeNature =F.SecurityChargeTypeName
			
									
												

						
			WHERE  A.UploadId=@UniqueUploadID and A.EffectiveToTimeKey>=@Timekey 


 --SET @SecurityEntityID=0

		Select @SecurityEntityID=  MAX(ISNULL(SecurityEntityID,0)) from [Curdat].[AdvSecurityValueDetail]

					 IF (@SecurityEntityID IS NULL)
					    Begin 
							SET   @SecurityEntityID=1
						END
					ELSE 
					    SET    @SecurityEntityID=@SecurityEntityID+1

						SET @ENTITYKEY=0
						
			--Select @ENTITYKEY=  MAX(ISNULL(ENTITYKEY,0)) from [Curdat].[AdvSecurityValueDetail]

			--		 IF (@ENTITYKEY IS NULL)
			--		    Begin 
			--				SET   @ENTITYKEY=1
			--			END
			--		ELSE 
			--		    SET    @ENTITYKEY=@ENTITYKEY+1
						
						PRINT '@SecurityEntityID'
					    PRINT @SecurityEntityID

			INSERT INTO [Curdat].[AdvSecurityValueDetail](
					
					 CollateralID,
					 ExpiryBusinessRule,
					 ValuationDate,
					  CurrentValue,
					SecurityEntityID
					
					 
					
					,EffectiveFromTimeKey
					,EffectiveToTimeKey
					,CreatedBy
					,DateCreated
					,ModifiedBy
					,DateModified
					,ApprovedBy
					,DateApproved
					 ,ENTITYKEY
						
						)

			Select CollateralID,ValSource_ExpBusinessRule,ValuationDate,ValueConsidered,SecurityEntityID,
			EffectiveFromTimeKey,EffectiveToTimeKey,CreatedBy,DateCreated,ModifiedBy,DateModified,UserNm,Userdt,ENTITYKEY from(
			SELECT    ROW_NUMBER() OVER(PARTITION BY A.CollateralID  ORDER BY  A.CollateralID) as Rownumber , A.CollateralID,
			           ValSource_ExpBusinessRule,
					ValuationDate	,
				 Convert(decimal(16,2),ISNULL(CurrCollateralValue,'0')) as ValueConsidered,
					
					@SecurityEntityID+Row_Number()Over(order by (Select 1)) SecurityEntityID,
					@Timekey EffectiveFromTimeKey,49999 EffectiveToTimeKey
					,A.CreatedBy
					,A.DateCreated
					,A.ModifiedBy
					,A.DateModified
					,@UserLoginID UserNm
					,Getdate() Userdt
					,@ENTITYKEY+Row_Number()Over(order by (Select 1))  as ENTITYKEY
                   FROM [CollateralDetailUpload_Mod] A
				 
			WHERE  A.UploadId=@UniqueUploadID and A.EffectiveToTimeKey>=@Timekey
			
) X Where X.Rownumber=1


--EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey AND

				UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='A',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE  UniqueUploadID=@UniqueUploadID
				AND UploadType='Colletral Detail Upload'
				

				


	END


	IF (@OperationFlag=17)----REJECT

	BEGIN
		
		UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'

			UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'
			----SELECT * FROM IBPCPoolDetail

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey AND
				 UniqueUploadID=@UniqueUploadID
				AND UploadType='Colletral Detail Upload'



	END

IF (@OperationFlag=21)----REJECT

	BEGIN
		
		UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus in('NP','1A')

			UPDATE 
			[CollateralDetailUpload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus in('NP','1A')
			----SELECT * FROM IBPCPoolDetail

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='Colletral Detail Upload'



	END


END


	--COMMIT TRAN
		---SET @Result=CASE WHEN  @OperationFlag=1 THEN @UniqueUploadID ELSE 1 END
		SET @Result=CASE WHEN  @OperationFlag=1 AND @MenuId=24736 THEN @ExcelUploadId 
					ELSE 1 END

		
		 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath

		 ---- IF EXISTS(SELECT 1 FROM IBPCPoolDetail_stg WHERE filEname=@FilePathUpload)
		 ----BEGIN
			----	 DELETE FROM IBPCPoolDetail_stg
			----	 WHERE filEname=@FilePathUpload

			----	 PRINT 'ROWS DELETED FROM IBPCPoolDetail_stg'+CAST(@@ROWCOUNT AS VARCHAR(100))
		 ----END
		 

		RETURN @Result
		--RETURN @ExcelUploadId
	END TRY
	BEGIN CATCH 
	   --ROLLBACK TRAN
	   --PRINT 'CatchDelete'
	   --PRINT 'UniqueUploadID'
	   --PRINT @UniqueUploadID
	   --PRINT 'ExcelUploadId'
	   --PRINT @ExcelUploadId

	   Delete from ExcelUploadHistory WHERE UniqueUploadID=@ExcelUploadId
				--AND UniqueUploadID=@UniqueUploadID
				--AND UploadType='Colletral Detail Upload'
	SELECT ERROR_MESSAGE(),ERROR_LINE()
	SET @Result=-1
	 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath
	RETURN -1
	END CATCH

END

GO