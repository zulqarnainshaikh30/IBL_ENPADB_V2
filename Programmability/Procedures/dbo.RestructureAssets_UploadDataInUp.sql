SET QUOTED_IDENTIFIER, ANSI_NULLS ON
GO




CREATE PROCEDURE  [dbo].[RestructureAssets_UploadDataInUp]
	@Timekey INT,
	@UserLoginID VARCHAR(100),
	@OperationFlag INT,
	@MenuId INT,
	@AuthMode	CHAR(1),
	@filepath VARCHAR(MAX),
	@EffectiveFromTimeKey INT,
	@EffectiveToTimeKey	INT,
    @Result		INT=0 OUTPUT,
	@UniqueUploadID INT=10
	--@Authlevel varchar(5)

AS

--DECLARE @Timekey INT=24928,
--	@UserLoginID VARCHAR(100)='FNAOPERATOR',
--	@OperationFlag INT=1,
--	@MenuId INT=24714,
--	@AuthMode	CHAR(1)='N',
--	@filepath VARCHAR(MAX)='',
--	@EffectiveFromTimeKey INT=24928,
--	@EffectiveToTimeKey	INT=49999,
--    @Result		INT=0 ,
--	@UniqueUploadID INT=41
BEGIN
SET DATEFORMAT DMY
	SET NOCOUNT ON;
	--Declare @CollIDAutoGenerated   Int
 --   Declare @CollateralID		   varchar(30)=''
   --DECLARE @Timekey INT
   --SET @Timekey=(SELECT MAX(TIMEKEY) FROM dbo.SysProcessingCycle
			--	WHERE ProcessType='Quarterly')

			Set @Timekey=(
			select CAST(B.timekey as int)from SysDataMatrix A
			Inner Join SysDayMatrix B ON A.TimeKey=B.TimeKey
			 where A.CurrentStatus='C'
			 )

	PRINT @TIMEKEY

	SET @EffectiveFromTimeKey=@TimeKey
	SET @EffectiveToTimeKey=49999


	DECLARE @FilePathUpload	VARCHAR(100)
				   SET @FilePathUpload=@UserLoginId+'_'+@filepath
					PRINT '@FilePathUpload'
					PRINT @FilePathUpload


		BEGIN TRY

		--BEGIN TRAN
		
IF (@MenuId=24714)
BEGIN
 --Set @FilePathUpload='mismaker_CollateralUpload_3.xlsx'
 --select * from SysCRisMacMenu where menucaption like '%Restru%'
	IF (@OperationFlag=1)

	BEGIN

		IF NOT (EXISTS (SELECT * FROM RestructuredAssetsUpload_stg  where filname=@FilePathUpload))

							BEGIN
									 --Rollback tran
									SET @Result=-8

								RETURN @Result
							END
			
                   Print 'Sachin'

		IF EXISTS(SELECT 1 FROM RestructuredAssetsUpload_stg WHERE filname=@FilePathUpload)
		BEGIN
		
		INSERT INTO ExcelUploadHistory
	(
		UploadedBy	
		,DateofUpload	
		,AuthorisationStatus	
		--,Action	
		,UploadType
		,EffectiveFromTimeKey	
		,EffectiveToTimeKey	
		,CreatedBy	
		,DateCreated	
		
	)

	SELECT @UserLoginID
		   ,GETDATE()
		   ,'NP'
		   --,'NP'
		   ,'Restructure Assets Upload'
		   ,@EffectiveFromTimeKey
		   ,@EffectiveToTimeKey
		   ,@UserLoginID
		   ,GETDATE()

		   --sp
			   PRINT @@ROWCOUNT

		   DECLARE @ExcelUploadId INT
	SET 	@ExcelUploadId=(
	SELECT MAX(UniqueUploadID) FROM  ExcelUploadHistory
	)
		
			Insert into UploadStatus (FileNames,UploadedBy,UploadDateTime,UploadType)
		Values(@filepath,@UserLoginID ,GETDATE(),'Restructure Assets Upload')

/*
		SET @CollIDAutoGenerated=0
				
         
					Select @CollIDAutoGenerated= MAX(Convert(Int,ISNULL(CollateralID,0))) From(
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityDetail
					UNION ALL
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityDetail_Mod
					UNION ALL
					Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from Curdat.AdvSecurityValueDetail
					UNION ALL
					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.AdvSecurityValueDetail_Mod
					 UNION ALL
					 Select MAX(Convert(Int,ISNULL(CollateralID,0))) as CollateralID from DBO.CollateralDetailUpload_Mod
					 )X

					IF (@CollIDAutoGenerated IS NULL)

						SET   @CollIDAutoGenerated=1000001

					ELSE 
					    SET    @CollIDAutoGenerated=Convert(Int,@CollIDAutoGenerated)+1

						--Print '@CollIDAutoGenerated'
						--Print @CollIDAutoGenerated
					 
					 SET @CollateralID=Convert(Varchar(30),@CollIDAutoGenerated)

					 PRINT '@ExcelUploadId'
					 PRINT @ExcelUploadId


					 */

	 SET dateformat DMY
	 --alter table RestructureAsset_Upload_Mod
	 --add SrNo INT
		INSERT INTO [RestructureAsset_Upload_Mod]
		(
		      SrNo
              ,AccountID
             --,AccountEntityID
             ,UploadID
------------------------
            ,BankingRelationship
			,InvocationDate
			,DateofRestructuring
			,RestructuringApprovingAuth
			,TypeofRestructuring
			,AssetClassatRstrctr
			,IfNPANPADate
			,NPAIdentificationDate
			,PrinRpymntStartDate
			,InttRpymntStartDate
			,DPD_AsOnRestr
			,OSasondateofRstrctr
			,POSasondateofRstrctr
			,DFVProvisionRs

			,SheetName
             ,AuthorisationStatus
             ,EffectiveFromTimeKey
             ,EffectiveToTimeKey
             ,CreatedBy
             ,DateCreated


			


------------------------

		)
		
		SELECT
			       Case When Isnumeric(SrNo)=1 then cast(SrNo as int) Else Null END srNo
                   ,AccountID
				   --,@AccountEntityID
				   ,@ExcelUploadId
--------------------
                   ,BankingRelationship
				   ,Case When InvocationDate<>'' Then  Convert(date,InvocationDate) Else NULL END as InvocationDate
				   ,Case When DateofRestructuring<>'' Then  Convert(date,DateofRestructuring,103) Else NULL END as DateofRestructuring
				   ,RestructuringApprovingAuth
				   ,TypeofRestructuring
				   ,AssetClassatRstrctr
				   ,Case When NPADate<>'' Then  Convert(date,NPADate) Else NULL END as NPADate
				   ,Case When NPAIdentificationDate<>'' Then  Convert(date,NPAIdentificationDate) Else NULL END as NPAIdentificationDate
				   ,Case When PrinRpymntStartDate<>'' Then  Convert(date,PrinRpymntStartDate) Else NULL END as PrinRpymntStartDate
				   ,Case When InttRpymntStartDate<>'' Then  Convert(date,InttRpymntStartDate) Else NULL END as InttRpymntStartDate
				   ,case When DPDasonDateofRestructure<>'' then Cast(DPDasonDateofRestructure as Smallint) else Null END DPDasonDateofRestructure

				   ,Case When isnumeric(OSasonDateofRstrctr)=1 Then Cast(OSasonDateofRstrctr as decimal(18,2))   Else Null END  OSasonDateofRstrctr --decimal
				   ,Case When isnumeric(POSasonDateofRstrctr)=1 Then Cast(POSasonDateofRstrctr as  decimal(18,2)) Else Null END  POSasonDateofRstrctr
				   ,Case When isnumeric(DFVProvisionRs)=1 Then Cast(DFVProvisionRs as decimal(18,2))        Else Null END  DFVProvisionRs --decimal
				   --,OSasonDateofRstrctr
				   --,POSasonDateofRstrctr
				   --,DFVProvisionRs

				    ,filname
				    ,'NP'
				   ,@Timekey
			       ,49999
		           ,@UserLoginID
			       ,GETDATE()

----------------

			  
		--select *	
		FROM RestructuredAssetsUpload_stg
		where filname=@FilePathUpload



		---------------------------------------------------------ChangeField Logic---------------------
		----select * from AccountLvlMOCDetails_stg
	IF OBJECT_ID('TempDB..#RestructuredAssetsUpload') Is Not Null
	Drop Table #RestructuredAssetsUpload

	Create TAble #RestructuredAssetsUpload
	(
	AccountID Varchar(30), FieldName Varchar(50),SrNo Varchar(Max))

	Insert Into #RestructuredAssetsUpload(AccountID,FieldName)

	Select AccountID, 'BankingRelationship' FieldName from RestructuredAssetsUpload_stg Where isnull(BankingRelationship,'')<>''

	UNION ALL
	Select AccountID, 'InvocationDate' FieldName from RestructuredAssetsUpload_stg Where isnull(InvocationDate,'')<>'' 
	UNION ALL

	Select AccountID, 'DateofRestructuring' FieldName from RestructuredAssetsUpload_stg Where isnull(DateofRestructuring,'')<>'' 
	UNION ALL
	Select AccountID, 'RestructuringApprovingAuth' FieldName from RestructuredAssetsUpload_stg Where isnull(RestructuringApprovingAuth,'')<>'' 
	UNION ALL
	Select AccountID, 'TypeofRestructuring' FieldName from RestructuredAssetsUpload_stg Where isnull(TypeofRestructuring,'')<>'' 

	UNION ALL
	Select AccountID, 'AssetClassatRstrctr' FieldName from RestructuredAssetsUpload_stg Where isnull(AssetClassatRstrctr,'')<>'' 
	UNION ALL
	Select AccountID, 'NPADate' FieldName from RestructuredAssetsUpload_stg Where isnull(NPADate,'')<>'' 
	UNION ALL
	Select AccountID, 'NPAIdentificationDate' FieldName from RestructuredAssetsUpload_stg Where isnull(NPAIdentificationDate,'')<>'' 
	UNION ALL
	Select AccountID, 'PrinRpymntStartDate' FieldName from RestructuredAssetsUpload_stg Where isnull(PrinRpymntStartDate,'')<>'' 	
		UNION ALL
	Select AccountID, 'InttRpymntStartDate' FieldName from RestructuredAssetsUpload_stg Where isnull(InttRpymntStartDate,'')<>'' 
	UNION ALL
	Select AccountID, 'DPDasonDateofRestructure' FieldName from RestructuredAssetsUpload_stg Where isnull(DPDasonDateofRestructure,'')<>'' 
	UNION ALL
	Select AccountID, 'OSasonDateofRstrctr' FieldName from RestructuredAssetsUpload_stg Where isnull(OSasonDateofRstrctr,'')<>'' 
	UNION ALL
	Select AccountID, 'POSasonDateofRstrctr' FieldName from RestructuredAssetsUpload_stg Where isnull(POSasonDateofRstrctr,'')<>'' 

		UNION ALL
	Select AccountID, 'DFVProvisionRs' FieldName from RestructuredAssetsUpload_stg Where isnull(DFVProvisionRs,'')<>'' 



		print 'nanda3'

	--select *
	Update B set B.SrNo=A.ScreenFieldNo
	from MetaScreenFieldDetail A
	Inner Join #RestructuredAssetsUpload B ON A.CtrlName=B.FieldName
	Where A.MenuId=@MenuId And A.IsVisible='Y'


		print 'nanda4'
	
				 IF OBJECT_ID('TEMPDB..#NEWTRANCHE')  IS NOT NULL
					DROP TABLE #NEWTRANCHE

					SELECT * INTO #NEWTRANCHE FROM(
					SELECT 
						 SS.AccountID,
						STUFF((SELECT ',' + US.SrNo 
							FROM #RestructuredAssetsUpload US
							WHERE US.AccountID = SS.AccountID
							FOR XML PATH('')), 1, 1, '') [REPORTIDSLIST]
						FROM RestructuredAssetsUpload_stg SS 
						GROUP BY SS.AccountID
						)B
						ORDER BY 1

						--Select * from #NEWTRANCHE

					--SELECT * 
					UPDATE A SET A.ChangeFields=B.REPORTIDSLIST
					FROM DBO.RestructureAsset_Upload_Mod A
					INNER JOIN #NEWTRANCHE B ON A.AccountID=B.AccountID
					WHERE  A.EFFECTIVEFROMTIMEKEY<=@TimeKey AND A.EFFECTIVETOTIMEKEY>=@TimeKey
					And A.UploadID=@ExcelUploadId









		
		---DELETE FROM STAGING DATA Sachin
		Print' DELETE FROM RestructuredAssetsUpload_stg'
		 DELETE FROM RestructuredAssetsUpload_stg
		 WHERE filname=@FilePathUpload

		 --RETURN @ExcelUploadId

		



END
		   ----DECLARE @UniqueUploadID INT
	--SET 	@UniqueUploadID=(SELECT MAX(UniqueUploadID) FROM  ExcelUploadHistory)
	END


	IF (@OperationFlag=16)----AUTHORIZE

	BEGIN
		
		IF (@UserLoginID =(Select CreatedBy from RestructureAsset_Upload_Mod 
		where AuthorisationStatus IN ('NP','MP') and UploadId=@UniqueUploadID and EffectiveToTimeKey = 49999
				                      --AND CreatedBy in (select createdby from DimUserInfo where  IsChecker='N')  
									    Group By CreatedBy))
				BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
								--SELECT * FROM RestructureAsset_Upload_Mod
				END

		UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='1A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

			UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='1A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID


			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='1A',
				ApprovedBy=@UserLoginID,
				DateApproved=GETDATE()
				WHERE UniqueUploadID=@UniqueUploadID
				AND UploadType='Restructure Assets Upload'
				 

	End
	IF (@OperationFlag=20)----AUTHORIZE

	BEGIN
		 IF @UserLoginID= (select UserLoginID from DimUserInfo where  IsChecker2='N' and UserLoginID=@UserLoginID )
			   BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
								
				END
          

				IF (@UserLoginID =(Select CreatedBy from RestructureAsset_Upload_Mod  
				where CreatedBy=@UserLoginID  and AuthorisationStatus IN ('1A') and UploadId=@UniqueUploadID and EffectiveToTimeKey = 49999
				                     --AND CreatedBy in (select createdby from DimUserInfo where  IsChecker2='N')
								   Group By CreatedBy))

				BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
								--select * from RestructureAsset_Upload_Mod
				END

				
	ELSE 
	BEGIN
		IF (@UserLoginID =(Select ApprovedBy from RestructureAsset_Upload_Mod where  ApprovedBy=@UserLoginID 
		and  AuthorisationStatus IN ('1A') and UploadId=@UniqueUploadID and EffectiveToTimeKey = 49999
			                      Group By ApprovedBy))
	          BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
								--select createdby,* from DimBranch_Mod
	         END
		ELSE 
		BEGIN
		
		UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID

			UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='A'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			Declare @EntityID      Bigint
			Select @EntityID=  MAX(ISNULL(EntityKey,0)) from CurDat.AdvAcRestructureDetail

					 IF (@EntityID IS NULL)
					    Begin 
							SET   @EntityID=1
						END
					ELSE 
					    SET    @EntityID=@EntityID+1

	INSERT INTO [Curdat].[AdvAcRestructureDetail](
	EntityKey
,RefSystemAcId					 
,AccountEntityId
,RestructureCatgAlt_Key  ---RestructureFacility
,RevisedBusinessSegment   ---RevisedBusinessSeg
,DisbursementDate
,RefDate
,InvocationDate
,ConversionDate
,RepaymentStartDate
,IntRepayStartDate
,RestructureAssetClassAlt_key
,PreRestrucNPA_Date
,Npa_Qtr
,RestructureTypeAlt_Key
,Is_COVID_Morat
,COVID_OTR_Catg
,BankingType
,RestructureDate
,ApprovingAuthAlt_Key
,CRILIC_Fst_DefaultDate
,FstDefaultReportingBank   --,ReportingBank  
,ICA_SignDate
,RestructureAmt
,RestructurePOS
,Is_InvestmentGrade
,CreditProvision
,DFVProvision
,MTMProvision
,AuthorisationStatus
			,EffectiveFromTimeKey
			,EffectiveToTimeKey
			,CreatedBy
			,DateCreated
			,ModifiedBy
			,DateModified
			,ApprovedBy
			,DateApproved
			,DPD_AsOnRestr
			,NPAIdentificationDate



						)

						select 
						@EntityID
                     ,AccountID
				   , B.AccountEntityID
				   --,@ExcelUploadId
                   ,I.ParameterAlt_Key    RestructureFacility
                   ,RevisedBusinessSeg
                   ,Case When DisbursementDate<>'' Then  Convert(date,DisbursementDate) Else NULL END as DisbursementDate
                   ,Case When ReferenceDate<>'' Then  Convert(date,ReferenceDate) Else NULL END as ReferenceDate
                   ,Case When InvocationDate<>'' Then  Convert(date,InvocationDate) Else NULL END as InvocationDate
                   ,Case When DateofConversionintoEquity<>'' Then  Convert(date,DateofConversionintoEquity) Else NULL END as DateofConversionintoEquity
                   ,Case When PrinRpymntStartDate<>'' Then  Convert(date,PrinRpymntStartDate) Else NULL END as PrinRpymntStartDate
                   ,Case When InttRpymntStartDate<>'' Then  Convert(date,InttRpymntStartDate) Else NULL END as InttRpymntStartDate
                   ,DA.AssetClassAlt_Key AssetClassatRstrctr
                   ,Case When IfNPANPADate<>'' Then  Convert(date,IfNPANPADate) Else NULL END as IfNPANPADate
                   ,NPAQuarter
                   ,J.ParameterAlt_Key  TypeofRestructuring
                   ,K.ParameterAlt_Key  CovidMoratoriamMSME
                   ,L.ParameterAlt_Key CovidOTRCategory
                   ,M.ParameterAlt_Key BankingRelationship
                   ,Case When DateofRestructuring<>'' Then  Convert(date,DateofRestructuring) Else NULL END as DateofRestructuring
                   ,RestructuringApprovingAuth
                   ,Case When DateofIstDefaultonCRILIC<>'' Then  Convert(date,DateofIstDefaultonCRILIC) Else NULL END as DateofIstDefaultonCRILIC
                   ,ReportingBank
                   ,Case When DateofSigningICA<>'' Then  Convert(date,DateofSigningICA) Else NULL END as DateofSigningICA
                   ,OSasondateofRstrctr
                   ,POSasondateofRstrctr
                   ,InvestmentGrade
                   ,CreditProvisionRs
                   ,DFVProvisionRs
                   ,MTMProvisionRs


				   ,A.AuthorisationStatus
					,@Timekey
					,49999
					,A.CreatedBy
					,A.DateCreated
					,A.ModifiedBy
					,A.DateModified
					,@UserLoginID
					,Getdate()
					,DPD_AsOnRestr
					,Case When NPAIdentificationDate<>'' Then  Convert(date,NPAIdentificationDate) Else NULL END as NPAIdentificationDate
					
			
			--select * 
			FROM [RestructureAsset_Upload_Mod] A
			LEFT Join AdvAcBasicDetail B ON B.CustomerACID=A.AccountID
			             and B.EffectiveFromTimeKey<=@Timekey And B.EffectiveToTimeKey>=@Timekey

						 LEFT JOIn DimassetClass DA ON DA.AssetClassName=A.AssetClassatRstrctr
                
				--select * from DimAssetClass

					 LEFT Join (

						Select  ParameterAlt_Key,ParameterName,'RestructureFacility' as Tablename 
						from DimParameter where DimParameterName='RestructureFacility'
						And EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey)I
						ON I.ParameterName=A.RestructureFacility

						 LEFT Join (

						Select  ParameterAlt_Key,ParameterName,'TypeofRestructuring' as Tablename 
						from DimParameter where DimParameterName='TypeofRestructuring'
						And EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey)J
						ON J.ParameterName=A.TypeofRestructuring

						LEFT Join (

						Select  ParameterAlt_Key,ParameterName,'CovidMoratorium' as Tablename 
						from DimParameter where DimParameterName='DimYesNoNA'
						And EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey)K
						ON K.ParameterName=A.CovidMoratoriamMSME

						LEFT Join (

						Select  ParameterAlt_Key,ParameterName,'Covid - OTR Category' as Tablename 
						from DimParameter where DimParameterName='Covid - OTR Category'
						And EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey)L
						ON L.ParameterName=A.CovidOTRCategory

						LEFT Join (

						Select  ParameterAlt_Key,ParameterName,'BankingRelationship' as Tablename 
						from DimParameter where DimParameterName='BankingRelationship'
						And EffectiveFromTimeKey<=@TimeKey And EffectiveToTimeKey>=@TimeKey)M
						ON M.ParameterName=A.BankingRelationship

						

						
			WHERE  A.UploadId=@UniqueUploadID and A.EffectiveToTimeKey>=@Timekey

		

				UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='A',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='Restructure Assets Upload'

				END
END

	END


	IF (@OperationFlag=17)----REJECT

	BEGIN
		
		 IF (@UserLoginID =(Select CreatedBy from RestructureAsset_Upload_Mod where  UploadId=@UniqueUploadID 
		 and EffectiveToTimeKey = 49999 and AuthorisationStatus in ('NP','MP') Group By CreatedBy))
	          BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
	         END

		UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'

			UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus='NP'
			----SELECT * FROM IBPCPoolDetail

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='Restructure Assets Upload'



	END

IF (@OperationFlag=21)----REJECT

	BEGIN

	  IF @UserLoginID= (select  UserLoginID from DimUserInfo where  IsChecker2='N' and UserLoginID=@UserLoginID 
	                      group by UserLoginID)
			   BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
								
				END


	IF (@UserLoginID =(Select CreatedBy from RestructureAsset_Upload_Mod 
	where  CreatedBy=@UserLoginID  and UploadId=@UniqueUploadID and AuthorisationStatus = '1A' and EffectiveToTimeKey = 49999
	Group By CreatedBy))
			BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
			END
		
			ELSE 
	BEGIN
		IF (@UserLoginID =(Select ApprovedBy from RestructureAsset_Upload_Mod where  ApprovedBy=@UserLoginID 
		and  UploadId=@UniqueUploadID and AuthorisationStatus = '1A' and EffectiveToTimeKey = 49999
			                      Group By ApprovedBy))
	          BEGIN
								SET @Result=-1
								ROLLBACK TRAN
								RETURN @Result
								--select createdby,* from DimBranch_Mod
	         END
		ELSE 
		BEGIN

		UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus in('NP','1A')

			UPDATE 
			[RestructureAsset_Upload_Mod] 
			SET 
			AuthorisationStatus	='R'
			,ApprovedBy	=@UserLoginID
			,DateApproved	=GETDATE()
			
			WHERE UploadId=@UniqueUploadID
			AND AuthorisationStatus in('NP','1A')
			----SELECT * FROM IBPCPoolDetail

			UPDATE
				ExcelUploadHistory
				SET AuthorisationStatus='R',ApprovedBy=@UserLoginID,DateApproved=GETDATE()
				WHERE EffectiveFromTimeKey<=@Timekey AND EffectiveToTimeKey>=@Timekey
				AND UniqueUploadID=@UniqueUploadID
				AND UploadType='Restructure Assets Upload'
				END
END

	END


END


	--COMMIT TRAN
		---SET @Result=CASE WHEN  @OperationFlag=1 THEN @UniqueUploadID ELSE 1 END
		SET @Result=CASE WHEN  @OperationFlag=1 AND @MenuId=24714 THEN @ExcelUploadId 
					ELSE 1 END

		
		 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath

		 ---- IF EXISTS(SELECT 1 FROM IBPCPoolDetail_stg WHERE filEname=@FilePathUpload)
		 ----BEGIN
			----	 DELETE FROM IBPCPoolDetail_stg
			----	 WHERE filEname=@FilePathUpload

			----	 PRINT 'ROWS DELETED FROM IBPCPoolDetail_stg'+CAST(@@ROWCOUNT AS VARCHAR(100))
		 ----END
		 

		RETURN @Result
		--RETURN @ExcelUploadId
	END TRY
	BEGIN CATCH 
	   --ROLLBACK TRAN
	   		 --DELETE FROM RestructuredAssetsUpload_stg WHERE filname=@FilePathUpload
		 
	SELECT ERROR_MESSAGE(),ERROR_LINE(),ERROR_NUMBER(),ERROR_PROCEDURE()
	SET @Result=-1
	 Update UploadStatus Set InsertionOfData='Y',InsertionCompletedOn=GETDATE() where FileNames=@filepath
	RETURN -1

	END CATCH

END































GO